寻标准库之书。
观标准库之书。
寻观拓展库之顺序标识符之顺序标识符之书。
寻观标准库之操作系统之时间之书。

寻编译文件管理器之书。
观编译文件管理器之书。

寻观豫言编译器之编译步骤之语法分析之具体语法树之书。
寻观豫言编译器之编译步骤之类型检查之文件结构检查之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法友好表示之书。

寻观豫言编译器之编译步骤之语法分析之词法解析之书。

寻观豫言编译器之编译步骤之语法分析之粗语法分析之书。

寻观豫言编译器之编译步骤之语法分析之抽象语法分析之书。

寻观豫言编译器之编译步骤之语法分析之函数合集之书。

寻观豫言编译器之编译步骤之类型标注之类型标注之书。
寻观豫言编译器之编译步骤之类型标注之模式匹配转换之书。
寻观豫言编译器之编译步骤之类型标注之类型擦除之书。
寻观豫言编译器之编译步骤之求值正则变换之带类型正则变换之书。
寻观豫言编译器之编译步骤之求值正则变换之无类型正则变换之书。
寻观豫言编译器之编译步骤之闭包转换之带类型闭包转换之书。
寻观豫言编译器之编译步骤之闭包转换之无类型闭包转换之书。
寻观豫言编译器之编译步骤之代码生成之代码生成之书。
寻观豫言编译器之编译步骤之代码生成之代码生成工具之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

寻编译文件信息之书。
观编译文件信息之书。

寻观标准库之操作系统之路径之书。


「：记录文件*完成编译*的顺序，用于生成最后的可执行代码：」
文件编译顺序乃引用类于（字符串列）也。
文件编译顺序者新引用于【】也。

当前路径者文件系统之获取当前路径于元也。

「：输入文件的绝对路径，输出应当输出的文件路径prefix：」
获取输出文件路径乃化字符串「：绝对输入路径：」而字符串也。
获取输出文件路径者会输入而
    虑「
        去除结尾后者
            若（『。豫』是输入的结尾）则（去除串结尾于『。豫』于输入）
            否则（若（『.yuyan』是输入的结尾）则（去除串结尾于『.yuyan』于输入）
            否则（发生事故于『路径结尾不认识：』附输入））也。

        去除开头后者
            若（当前路径是「去除结尾后」的开头）
            则（去除串开头于当前路径于「去除结尾后」）
            否则「去除结尾后」也。

        （「路径合并」于（「路径合并」于当前路径于『.yybuild.nosync』）于去除开头后）
    」也。

获取输出代码文件路径乃化字符串而字符串也。
获取输出代码文件路径者会输入而
    （获取输出文件路径于输入）附『.ll』也。

进行编译乃化字符串而有也。
进行编译者遇字符串者路径而（
    若存在编译单元于路径
    则元
    否则（
        「：内容可能从硬盘或者LSP更新，所以
        如果已有内容则不更新内容，否则更新内容。
        此外永远执行类型检查和编译成IR：」
        虑（
            「：为不报错，先添加编译单元：」
            「添加编译单元」于路径。

            时间格式者『[%Y-%m-%d %H:%M:%S] 』也。

            开始时间者获取当前纳秒时间于元也。
            标准错误打印行于（当前日期时间格式表示于时间格式）附『正在编译：』附路径。

            「：读取当前信息：」
            当前信息典者读取编译单元于路径也。

            「：从空的信息开始：」
            更新编译单元于路径于空串典。

            「：内容：」
            新内容信息者（
                「：要做：修复Unif的Bug：」
                「： 鉴（串典查找于当前信息典于「信息名内容」）而
                    有（可无）则文件系统之读文件于路径
                    或有（可有串）则（字符串也串） ：」
                若（存在键于当前信息典于「信息名内容」）
                则（串典读取于当前信息典于「信息名内容」）
                否则信息内容于（文件系统之读文件于路径）
            ）也。

            更新编译信息于路径于新内容信息。

            「：计算结构语法：」
            内容串者信息读取内容于新内容信息也。

            字符们者获取字符于内容串也。
            结树者词法解析于【】于字符们也。

            更新编译信息于路径于（信息结构语法树于结树）。
            
            粗语法者粗分析编译单元于结树也。

            「： 打印行于（『粗语法：』附（粗语法表示之「表示列」于粗语法））。
            打印行于（『正在计算抽象语法』）。 ：」
            抽象语法者抽象语法解析编译单元顶层于路径于粗语法也。
            更新编译信息于路径于（信息抽象语法于抽象语法）。

            粗略调试打印行于（会无而『》》》》》》》》语法分析完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于抽象语法））。

            检查后语法者进行文件结构检查顶层于路径于抽象语法也。
            更新编译信息于路径于（信息检查后语法于（检查后语法中零）于（检查后语法中一））。


            「： 打印行于（『计算抽象语法表示』）。 ：」
            粗略调试打印行于（会无而『》》》》》》》》类型检查完成： 』附路径）。
            详细调试打印行于（会无而『》》》》》》》》[D]类型检查完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于检查后语法中一））。
            详细调试打印行于（会无而『》》》》》》》》[D]类型检查完成： 』附路径附『 》》打印版抽象语法：「「：换行：」』附（抽象语法友好表示于二于检查后语法中一））。

            若（读引用于仅执行类型检查）则元否则（虑
            「
                若（「读引用」于「使用带类型的编译」）则（虑「

                类型标注后语法者「类型标注顶层」于检查后语法中一也。
                粗略调试打印行于（会无而『》》》》》》》》类型标注完成： 』附路径）。
                详细调试打印行于（会无而『》》》》》》》》[D]类型标注完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于类型标注后语法中一））。

                求值变换后语法者进行带类型求值正则变换顶层于「类型标注后语法」中一也。
                粗略调试打印行于（会无而『》》》》》》》》正则变换完成： 』附路径）。
                详细调试打印行于（会无而『》》》》》》》》[D]正则变换完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于求值变换后语法））。
                详细调试打印行于（会无而『》》》》》》》》[D]正则变换完成： 』附路径附『 》》打印版抽象语法：「「：换行：」』附（抽象语法友好表示于二于求值变换后语法））。

                闭包转换后语法者带类型闭包转换顶层于求值变换后语法也。
                粗略调试打印行于（会无而『》》》》》》》》闭包转换完成： 』附路径）。
                详细调试打印行于（会无而『》》》》》》》》[D]闭包转换完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于闭包转换后语法））。
                元
                」
                ）否则（虑「
                
                模式匹配转换后语法者「模式匹配转换顶层」于检查后语法中一也。
                粗略调试打印行于（会无而『》》》》》》》》模式匹配转换完成： 』附路径）。
                详细调试打印行于（会无而『》》》》》》》》[D]模式匹配转换完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于模式匹配转换后语法））。

                类型擦除后语法者「类型擦除顶层」于模式匹配转换后语法也。
                粗略调试打印行于（会无而『》》》》》》》》类型擦除完成： 』附路径）。
                详细调试打印行于（会无而『》》》》》》》》[D]类型擦除完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于模式匹配转换后语法））。

                求值变换后语法者进行无类型求值正则变换顶层于「类型擦除后语法」也。
                粗略调试打印行于（会无而『》》》》》》》》正则变换完成： 』附路径）。
                详细调试打印行于（会无而『》》》》》》》》[D]正则变换完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于求值变换后语法））。
                详细调试打印行于（会无而『》》》》》》》》[D]正则变换完成： 』附路径附『 》》打印版抽象语法：「「：换行：」』附（抽象语法友好表示于二于求值变换后语法））。

                闭包转换后语法者无类型闭包转换顶层于求值变换后语法也。
                粗略调试打印行于（会无而『》》》》》》》》闭包转换完成： 』附路径）。
                详细调试打印行于（会无而『》》》》》》》》[D]闭包转换完成： 』附路径附『 》》抽象语法：』附（抽象语法表示之「表达式表示」于闭包转换后语法））。

                
                全局名及函数名及生成内容者代码生成顶层于（读引用于文件编译顺序）于闭包转换后语法也。
                全局名者全局名及函数名及生成内容中零也。
                函数名者全局名及函数名及生成内容中一也。
                生成内容者全局名及函数名及生成内容中二也。
                详细调试打印行于（会无而『》》》》》》》》[D]代码生成完成』附生成内容）。
                更新编译信息于路径于（信息代码生成信息于全局名于函数名）。
                文件系统之写文件于（（获取输出文件路径于路径）附『.ll』）于生成内容。
                写引用于文件编译顺序于（（读引用于文件编译顺序）接【路径】）。
                操作系统之子进程之运行并打印结果于『llc』于【『-o』，
                                （（获取输出文件路径于路径）附『.o』），（（获取输出文件路径于路径）附『.ll』）】。
                操作系统之子进程之运行并打印结果于『llc』于【『-O3』，『-o』，
                                （（获取输出文件路径于路径）附『.opt.o』），（（获取输出文件路径于路径）附『.ll』）】。
                操作系统之子进程之运行并打印结果于『opt』于【『-O3』，『-S』，『-o』，
                                （（获取输出文件路径于路径）附『.opt.ll』），（（获取输出文件路径于路径）附『.ll』）】。
                操作系统之子进程之运行并打印结果于『llc』于【『-O3』，『-o』，
                                （（获取输出文件路径于路径）附『.opt.ll.o』），（（获取输出文件路径于路径）附『.opt.ll』）】。
                粗略调试打印行于（会无而『》》》》》》》》代码生成完成： 』附路径）。

                元
                」）。
                元。
            」）。

            结束时间者获取当前纳秒时间于元也。


            标准错误打印行于（当前日期时间格式表示于时间格式）附（『完成编译：』附路径附『 》》（包括编译包含文件的）总用时』附（用时秒数表示于开始时间于结束时间）附『秒』）。



            元
        ）
））
也。

写引用于（进行编译引用）于进行编译。

条件生成可执行程序并执行乃化字符串「：输入文件路径：」而有也。
条件生成可执行程序并执行者会路径而
    虑主模块路径者（「路径合并」于「当前路径」于『.yybuild/主程序.ll』）而
    虑程序本体者（默认编译模块的信息附
        『def i64* entryMain() {「：换行：」』附
        （以『「：换行：」』合并（
                态射于（会路径而
                    虑文件全局名及文件函数名者（读取代码生成信息于路径）而
                    虑文件全局名者文件全局名及文件函数名中零而
                    虑文件函数名者文件全局名及文件函数名中一而
                    虑临时名者下个字符序数于『模块临时名』而
                    『%"』附临时名附『" = call i64* @"』附文件函数名附『"()「：换行：」』
                ）于（读引用于文件编译顺序）
            ）
        ）附『「：换行：」』附
        『}「：换行：」』
    ）而
    虑无者文件系统之写文件于主模块路径于程序本体而
    元也。


