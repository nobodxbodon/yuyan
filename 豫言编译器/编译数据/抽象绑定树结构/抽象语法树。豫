

寻标准库之书。
观标准库之书。

寻观拓展库之顺序标识符之顺序标识符之书。

寻观粗语法树之书。

内建常量立元类型也。
    内建类型字符串立内建常量也。
    内建类型整数立内建常量也。
    内建类型小数立内建常量也。
    内建类型动态分类值立内建常量也。
    内建类型有立内建常量也。
    内建类型爻立内建常量也。
    内建类型元类型立内建常量也。
    内建爻阳立内建常量也。
    内建爻阴立内建常量也。
    内建有元立内建常量也。
    内建函数抛出异常立内建常量也。
    内建函数尝试运行立内建常量也。
    内建函数整数相等立内建常量也。
    内建函数整数大于立内建常量也。
    内建函数整数减立内建常量也。
    内建函数以当前续延调用立内建常量也。




内建常量表示乃化内建常量而字符串也。
内建常量表示者会量而鉴量而
    有「内建类型字符串」      则『《《内建类型：字符串》》』
    或有「内建类型整数」        则『《《内建类型：整数》》』
    或有「内建类型小数」       则『《《内建类型：小数》》』
    或有「内建类型动态分类值」     则『《《内建类型：动态分类值》》』
    或有「内建类型有」         则『《《内建类型：有》》』
    或有「内建类型爻」         则『《《内建类型：爻》》』
    或有「内建类型元类型」       则『《《内建类型：元类型》》』
    或有「内建爻阳」          则『《《内建爻：阳》》』
    或有「内建爻阴」          则『《《内建爻：阴》》』
    或有「内建有元」          则『《《内建有：元》》』
    或有「内建函数抛出异常」    则『《《内建函数：抛出异常字符串》》』
    或有「内建函数尝试运行」    则『《《内建函数：尝试运行字符串》》』
    或有「内建函数整数相等」    则『《《内建函数：整数：相等》》』
    或有「内建函数整数大于」    则『《《内建函数：整数：大于》》』
    或有「内建函数整数减」    则『《《内建函数：整数：减》》』
    或有「内建函数以当前续延调用」    则『《《内建函数：以当前续延调用》》』
    也。

所有内建常量者
【
    「内建类型字符串」    ，
    「内建类型整数」     ，
    「内建类型小数」     ，
    「内建类型动态分类值」  ，
    「内建类型有」      】
接【
    「内建类型爻」      ，
    「内建类型元类型」    ，
    「内建爻阳」       ，
    「内建爻阴」       ，
    「内建有元」       】接【
「内建函数抛出异常」，
「内建函数尝试运行」，  
「内建函数整数相等」   ，
「内建函数整数大于」       】接【
「内建函数整数减」    ，
「内建函数以当前续延调用」
「： ， 「内建函数新建动态分类」  ：」
「： ，「内建类型新的外部类型」 ：」
】也。



抽象语法者「
    「：valence，表达一个ABT节点的参数类型：」
    语法类立元类型也。
        元类立语法类也。
        函类立化语法类而化语法类而语法类也。

    参数形式立元类型也。
        隐式立参数形式也。
        显式立参数形式也。
        合并式立参数形式也。「：用于ANF合并点：」
        「：自隐式为自动补全时会自动补全：」
        「： 自隐式立参数形式也。 ：」
    定义透明性立元类型也。
        定义透明立定义透明性也。
        定义不透明立定义透明性也。


    节点名称立元类型也。
    声明立元类型也。
    表达式立元类型也。



        「：节点名称：」
        拉姆达抽象立化参数形式而节点名称也。「：一个参数：」
        拉姆达抽象带类型立化参数形式而节点名称也。「：两个参数，第一个为定义域类型：」
        内建节点立化内建常量而节点名称也。
        展开后内建节点立化内建常量而节点名称也。
        空缺立节点名称也。
        「括号表达式」立节点名称也。
        派抽象立化参数形式而节点名称也。「：两个参数，第一个是domain，第二个是有抽象的range：」
        纯名派抽象立化参数形式而节点名称也。「：一个参数，无domain，第二个是有抽象的range，目前只有隐式：」
        「函数调用」立化参数形式而节点名称也。
        「函数调用等待函数值」立化参数形式而节点名称也。「：用于合一中：」
        「函数调用等待参数值」立化参数形式而节点名称也。
        检查后函数调用带类型立化参数形式而节点名称也。 「：第一个参数是第二个参数的类型：」
        检查后函数调用带类型等待函数值立化参数形式而节点名称也。
        检查后函数调用带类型等待参数值立化参数形式而节点名称也。
        字符串节点立化字符串而节点名称也。
        整数节点立化整数而节点名称也。
        小数节点立化小数而化字符串合字符串「：Decimal 表示：」而节点名称也。
        模式匹配分支立节点名称也。「：case caluse：」
        常量模式匹配分支立节点名称也。「：第一个参数是比较常量，随后的参数是返回值：」
        变量模式匹配分支立节点名称也。「：第一个的参数是绑定的返回值，其中绑定会被绑定成待匹配式：」
        唯一构造器模式匹配分支立化整数而节点名称也。「：第一个的参数是绑定的返回值，其中绑定会被绑定成构造器的参数元组式：」
        模式匹配立节点名称也。「：case， 第一个参数是被匹配对象，之后每个参数是一个分支：」
        模式匹配带类型立节点名称也。「：case， 第一二个参数是被匹配对象的类型及物，之后每个参数是一个分支：」
        模式匹配新变量立化字符串而节点名称也。「：参数是变量的类型：」
        结构投影立化字符串而节点名称也。
        检查后结构投影带类型立化字符串而化整数而节点名称也。
        结构投影带序数立化字符串而化整数而节点名称也。
        结构投影等待结构值立化字符串而化整数而节点名称也。
        检查后结构投影带类型等待结构值立化字符串而化整数而节点名称也。
        爻分支节点立节点名称也。
        外部调用节点立节点名称也。
        解析后外部调用节点无类型立化字符串而节点名称也。
        解析后外部调用节点带类型立化字符串而节点名称也。
        静态单例类型节点立节点名称也。「：有两个参数，第一个是类型S，第二个式值V，表示 [S | st -> V]：」
        模式匹配静态单例类型节点立节点名称也。「：第二个值参数可能是元变量，如果元变量未有解析，则表示generic value：」
        未检查单例类型节点立节点名称也。 「： 用于结构虑，TODO：移除，直接用结构末项：」 
        近似结构节点立化或可有字符串「：可能的标签：」而节点名称也。
        空近似结构节点立节点名称也。
        原始结构节点立化或可有字符串「：可能的标签：」而节点名称也。 「：经过了初步类型检查的结构，但尚未进行后续处理（如构造递归项）：」
        空原始结构节点立节点名称也。
        结构节点立化或可有字符串「：可能的标签：」而节点名称也。「：两个参数，第一个参数是当前项，第二个参数是带有binding的后续项：」
        空结构节点立节点名称也。「：结构节点的Unit（单位元？）：」
        正则结构结尾节点立节点名称也。「：参数是要构建的Tuple：」
        正则结构结尾参数节点立化字符串而节点名称也。「：参数是要构建的Tuple：」
        正则结构结尾节点无类型立节点名称也。「：参数是要构建的Tuple：」
        自由变量标注节点立化字符串而节点名称也。「：参数是要构建的Tuple：」
        签名节点立化或可有字符串而节点名称也。
        正则签名节点立化字符串而节点名称也。「：参数是当前类型和尾式，尾式没有绑定：」
        空签名节点立节点名称也。
        签名实现节点立节点名称也。「：检查过的结构以及合成的签名：」
        操作符声明节点立化字符串而化「操作符结合性」而节点名称也。
        内联虑立节点名称也。
        内联虑带类型立节点名称也。
        递归内联虑无类型立节点名称也。
        递归内联虑带类型立节点名称也。
        结构虑立节点名称也。
        顺序执行节点立节点名称也。
        类型判断节点立节点名称也。
        对子构造节点立节点名称也。
        元组构造节点立节点名称也。
        对子构造结尾节点立节点名称也。
        对子类型节点立节点名称也。
        对子类型结尾节点立节点名称也。
        擦除后类型节点立节点名称也。
        对子解构节点立节点名称也。
        元组解构节点立化整数而节点名称也。
        对子解构节点等待对子值立节点名称也。
        元组解构节点等待元组值立化整数而节点名称也。
        检查后对子解构节点带类型立节点名称也。
        检查后对子解构节点带类型等待对子值立节点名称也。
        文件引用节点立化字符串而节点名称也。「：字符串为模块文件的绝对路径：」
        唯一构造器节点立化整数而化字符串而节点名称也。「：整数为唯一表示符，字符串是最有可能的构造器名称，debug使用：」「：根据类型理论，我们或许应该使用recursive sum types，不过先用类型构造器试试看行不行：」
        展开后唯一构造器节点立化整数而节点名称也。「：整数为唯一表示符：」「：根据类型理论，我们或许应该使用recursive sum types，不过先用类型构造器试试看行不行：」
        递归节点立节点名称也。「：参数必须是派类型，拥有：」
        元变量立化整数而节点名称也。
        待定节点立节点名称也。「：在parsing的时候快速构建不需要类型的节点，会desugar成元变量，：」
        单类型签名节点立节点名称也。「：t : type |- <| t |> sig ：」
        单类型签名节点等待单类型立节点名称也。
        签名对象节点立节点名称也。「：类型到对象的coercion，与单类型签名节点的作用相反：」
        签名对象节点等待签名值立节点名称也。
        签名类型节点立节点名称也。
        签名类型类型占位节点立节点名称也。
        近似类型原子节点立节点名称也。
        近似类型占位节点立节点名称也。
        类型声明近似类型节点立化定义透明性而节点名称也。「：参数一为近似的类型，参数二为原类型：」
        构造声明近似类型节点立节点名称也。「：参数一为近似的类型，参数二为原类型：」
        定义声明近似类型节点立化定义透明性而节点名称也。「：参数一为近似的类型，参数二为定义式，用于定义声明：」「：默认是不透明的！：」
        递归定义声明近似节点立化定义透明性而节点名称也。「：递归定义声明就是如果定义的类型已经有了：」 「：第一个参数为近似类型，第二个为递归名称，第三个参数为定义式：」 
        直接表达式近似节点立节点名称也。「：第一个参数为近似类型，第二个为递归名称，第三个参数为定义式：」
        文件导入近似类型节点立化字符串而节点名称也。
        类型声明原始结构节点立化定义透明性而节点名称也。「：参数二为类型：」
        构造声明原始结构节点立节点名称也。「：参数二为类型：」
        定义声明原始结构节点立节点名称也。「：参数二为定义，用于定义声明：」
        递归定义声明原始结构节点立节点名称也。「：第二个为递归名称，第三个参数为定义式：」
        直接表达式原始结构节点立节点名称也。「：第一个参数为近似类型，第二个为递归名称，第三个参数为定义式：」
        续延调用节点立节点名称也。
        闭包变量节点立节点名称也。 「：参数是一系列自由变量：」
        闭包变量投影节点立化整数而节点名称也。
        闭包拉姆达抽象立节点名称也。「：第一个参数是连续两个绑定式，分别是环境和参数，第二个参数是闭包变量节点：」
        闭包函数调用节点立节点名称也。
        闭包递归内联虑无类型立节点名称也。
        递归变量节点立节点名称也。「：参数是需要递归的自由变量，用于ANF：」

        「：声明：」
        文件操作立化结构名称操作而化字符串列而声明也。
        构造声明立化字符串而化表达式而声明也。 
        类型声明立化定义透明性而化字符串而化表达式而声明也。
        定义声明立化定义透明性而化表达式而化表达式而声明也。
        直接表达式立化表达式而声明也。
        操作符声明立化字符串而化「操作符结合性」而声明也。

        「：表达式：」
        式节点立化节点名称而化表达式列而表达式也。
        绑定立化（或可有字符串）「：可能的字符串：」而化表达式而表达式也。「：使用deBruijn：」
        绑定变量立化整数而表达式也。
        自由变量立化字符串而表达式也。

    内建乃化内建常量而表达式也。
    内建者会甲而（式节点于（内建节点于甲）于【】）也。

    「内建元类型」者内建于内建类型元类型也。
    「内建元类型式」者内建于内建类型元类型也。
        
    抽象替换自由变量乃化字符串而化整数而化表达式而表达式也。
    抽象替换自由变量者循抽象替换自由变量以会绑名而会当前序数而会式而
        鉴式而 
            有自由变量于名则
                （若「串相等」于名于绑名
                则绑定变量于当前序数
                否则式
                ）
            或有绑定变量于「序数」则「绑定变量」于序数
            或有绑定于名于「下式」则绑定于名于（抽象替换自由变量于绑名于（当前序数加一）于下式）
            或有式节点于「名称」于「式列」则「式节点」于名称于（态射于（抽象替换自由变量于绑名于当前序数）于「式列」）
            或有其他则发生事故于『未有229』
    也。
    
    「：构造抽象 进行抽象于X于X X = λX.X X：」
    进行抽象乃化字符串而化表达式而表达式也。
    进行抽象者会绑名而会式而
        绑定于（可有绑名）于（抽象替换自由变量于绑名于一于式）
        也。

    进行无名抽象乃化表达式而表达式也。
    进行无名抽象者会式而
        绑定于（可无）于（式）
        也。

    解构替换绑定变量乃化整数而化表达式而化表达式而表达式也。
    解构替换绑定变量者循解构替换绑定变量以会当前序数而会替换式而会式而
        鉴式而 
            有自由变量于名则自由变量于名
            或有绑定变量于「序数」则
                （若当前序数等于序数
                则替换式
                否则绑定变量于序数）
            或有绑定于名于「下式」则绑定于名于（解构替换绑定变量于（当前序数加一）于替换式于下式）
            或有式节点于「名称」于「式列」则式节点于名称于（态射于（解构替换绑定变量于当前序数于替换式）于「式列」）
            或有「其他」则发生事故于『未有253』
    也。

    「：非重复替换变量必须：」
    解构替换绑定名非重复乃化整数而化字符串而化表达式而表达式也。
    解构替换绑定名非重复者循解构替换绑定名非重复以会当前序数而会替换自由变量名而会式而
        鉴式而 
            有自由变量于名则
                （若「串相等」于名于替换自由变量名
                则发生事故于『名称重复』
                否则自由变量于名）
            或有绑定变量于「序数」则
                （若当前序数等于序数
                则自由变量于（替换自由变量名）
                否则绑定变量于序数）
            或有绑定于名于「下式」则绑定于名于（解构替换绑定名非重复于（当前序数加一）于替换自由变量名于下式）
            或有式节点于「名称」于「式列」则式节点于名称于（态射于（解构替换绑定名非重复于当前序数于替换自由变量名）于「式列」）
            或有「其他」则发生事故于『未有270』
    也。
    
    替换抽象名称乃化字符串而化表达式而（表达式）也。
    替换抽象名称者会新名而会式而鉴式而
        有绑定于（名）于「下式」则
            绑定于（可有新名）于下式
        或有「其他」则发生事故于『不可替换抽象于非绑定式』
        也。

」也。


抽象语法表示者「
    观抽象语法之书。

    声明表示引用乃引用类于（化声明而字符串）也。
    声明表示引用者新引用于（（化声明而字符串）也会甲而发生事故于『未赋值』）也。
    表达式表示引用乃引用类于（化表达式而字符串）也。
    表达式表示引用者新引用于（（化表达式而字符串）也会甲而发生事故于『未赋值』）也。

    参式表示乃化参数形式而字符串也。
    参式表示者会参式而（鉴参式而
        有显式则『』
        或有隐式则『（隐式）』
        或有「合并式」则『（合并）』
    ）也。
    定义透明性表示乃化定义透明性而字符串也。
    定义透明性表示者会性而（鉴性而
        有定义透明则『透明』
        或有定义不透明则『不透明』
    ）也。

    节点名称表示乃化（节点名称）而字符串也。
    节点名称表示者会名而鉴名而
        有拉姆达抽象于「参式」则『λ』附（参式表示于参式）
        或有拉姆达抽象带类型于「参式」则『λ（带类型）』附（参式表示于参式）
        或有（内建节点于内建类型元类型）则『(Type)』
        或有（内建节点于「常量」）则『内建：』附（内建常量表示于常量）
        或有（展开后内建节点于「常量」）则『（展开后）内建：』附（内建常量表示于常量）
        或有空缺则『「」』
        或有「括号表达式」则『（）』
        或有派抽象于「参式」则『Π』附（参式表示于参式）
        或有纯名派抽象于「参式」则『Πₙ』附（参式表示于参式）
        或有函数调用于「参式」则『ap』
        或有「函数调用等待函数值」于「参式」则『ap(-,M)』
        或有「函数调用等待参数值」于「参式」则『ap(V,-)』
        或有「检查后函数调用带类型」于「参式」则『ap(带类型)』
        或有「检查后函数调用带类型等待函数值」于「参式」则『ap₋(-,M)』
        或有「检查后函数调用带类型等待参数值」于「参式」则『ap₋(V,-)』
        或有字符串节点于串则『『』附串附『「：』：」』
        或有（整数节点于数）则『(int:』附（整数表示于数）附『)』
        或有（「小数节点」于数于（整部与小部））则『(』附（「小数操作」之「小数表示」于数）附『，』附（整部）附『.』附（「小部」）附『)』
        或有模式匹配分支则『|→』
        或有常量模式匹配分支则『|→(const)』
        或有变量模式匹配分支则『|→(var)』
        或有唯一构造器模式匹配分支于「序数」则『|→(⌂』附（整数表示于序数）附『)』
        或有模式匹配则『case』
        或有模式匹配带类型则『case(带类型)』
        或有模式匹配新变量于「变量名」则『$』附变量名
        或有结构投影于串则『↘』附串附『↙』
        或有「结构投影等待结构值」于串于数则『↘』附串附『(』附（整数表示于数）附『)』附『↙(-)』
        或有「检查后结构投影带类型」于串于数则『↘』附串附『(』附（整数表示于数）附『)』附『↙』
        或有「结构投影带序数」于串于数则『↘』附串附『(』附（整数表示于数）附『)』附『↙』
        或有「检查后结构投影带类型等待结构值」于串于数则『↘』附串附『(』附（整数表示于数）附『)』附『↙(-)』
        或有「爻分支节点」则『如果』
        或有「外部调用节点」则『外部调用』
        或有「解析后外部调用节点无类型」于串则『（外部调用）』附串
        或有「解析后外部调用节点带类型」于串则『（外部调用带类型）』附串
        或有「静态单例类型节点」则『静态单例』
        或有「模式匹配静态单例类型节点」则『模式匹配静态单例』
        或有「未检查单例类型节点」则『未检查单例』
        或有「近似结构节点」于「标签名」则『Σ⟨?⟩(↪』附（鉴标签名而有（可有「真名」）则真名或有「可无」则『_』）附『)』
        或有「空近似结构节点」则『Σ⟨?⟩0』
        或有「原始结构节点」于「标签名」则『Σ⟨✓⟩(↪』附（鉴标签名而有（可有「真名」）则真名或有「可无」则『_』）附『)』
        或有「空原始结构节点」则『Σ⟨✓⟩0』
        或有「结构节点」于「标签名」则『Σ⟨⟩(↪』附（鉴标签名而有（可有「真名」）则真名或有「可无」则『_』）附『)』
        或有「空结构节点」则『Σ⟨⟩0』
        或有「正则结构结尾节点」则『Σ⟨正则带类型⟩0』
        或有「正则结构结尾参数节点」于「投影名」则『↪』附投影名
        或有「正则结构结尾节点无类型」则『Σ⟨正则无类型⟩0』
        或有「自由变量标注节点」于「投影名」则『↪』附投影名
        或有「签名节点」于「标签名」则『Σ(↪』附（鉴标签名而有（可有「真名」）则真名或有「可无」则『_』）附『)』
        或有「正则签名节点」于「标签名」则『Σ⁺(↪』附（标签名）附『)』
        或有「空签名节点」则『Σ0』
        或有「签名实现节点」则『签名&实现』
        或有「操作符声明节点」于「符名」于结则『操作符(』附（符名）附『)交』附（「操作符结合性表示」于结）
        或有「内联虑」则『虑』
        或有「内联虑带类型」则『虑(带类型)』
        或有「递归内联虑无类型」则『递归虑(无类型)』
        或有「递归内联虑带类型」则『递归虑(带类型)』
        或有「结构虑」则『虑(Σ)』
        或有「顺序执行节点」则『；』
        或有「类型判断节点」则『类型判断』
        或有「对子构造节点」则『⟨,⟩』
        或有「元组构造节点」则『⟨,...,⟩』「：元组仅在检查后才会出现：」
        或有「对子构造结尾节点」则『⟨,⟩0』
        或有「对子类型节点」则『合』
        或有「对子类型结尾节点」则『合0』
        或有「擦除后类型节点」则『擦除后类型节点』
        或有「对子解构节点」则『中』
        或有「元组解构节点」于「序数」则『↓(』附（整数表示于序数）附『)』
        或有「对子解构节点等待对子值」则『(-)中』
        或有（「元组解构节点等待元组值」于「序数」）则『↓(』附（整数表示于序数）附『)(-)』
        或有「检查后对子解构节点带类型」则『中（带类型）』
        或有「检查后对子解构节点带类型等待对子值」则『(-)中』
        或有「文件引用节点」于串则『文件引用『』附串附『「：』：」』
        或有「递归节点」则『递归』
        或有「唯一构造器节点」于数于「构造器名」则『⌂(』附（整数表示于数）附『,』附构造器名附『)』
        或有「展开后唯一构造器节点」于数则『⌂(』附（整数表示于数）附『)（展开）』
        或有「元变量」于数则『?(』附（整数表示于数）附『)』
        或有「待定节点」则『(??)』
        或有单类型签名节点则『◃▹』
        或有「单类型签名节点等待单类型」则『◃(-)▹』
        或有签名对象节点则『▹◃』
        或有「签名对象节点等待签名值」则『▹(-)◃』
        或有签名类型节点则『(sig)』
        或有签名类型类型占位节点则『(type of sig)』
        或有近似类型原子节点则『(*)』
        或有近似类型占位节点则『(X占位X)』
        或有类型声明近似类型节点于「透明性」则（定义透明性表示于透明性）附『近似类型声明』
        或有构造声明近似类型节点则『近似构造声明』
        或有定义声明近似类型节点于「透明性」则（定义透明性表示于透明性）附『近似定义声明』
        或有递归定义声明近似节点于「透明性」则（定义透明性表示于透明性）附『近似递归定义』
        或有「直接表达式近似节点」则『近似直接表达式』
        或有文件导入近似类型节点于串则『近似文件导入(』附串附『)』
        或有类型声明原始结构节点于「透明性」则（定义透明性表示于透明性）附『原始类型声明』
        或有构造声明原始结构节点则『原始构造声明』
        或有定义声明原始结构节点则『原始定义声明』
        或有递归定义声明原始结构节点则『原始递归定义』
        或有「直接表达式原始结构节点」则『原始直接表达式』
        或有「续延调用节点」则『续延调用』「：CallCC, 表达式是一个抽象：」
        或有「闭包变量节点」则『闭包变量』
        或有（「闭包变量投影节点」于数）则『闭包变量投影』附（整数表示于数）
        或有「闭包拉姆达抽象」则『闭包拉姆达』
        或有「闭包函数调用节点」则『闭包函数调用』
        或有「闭包递归内联虑无类型」则『闭包递归虑(无类型)』
        或有「递归变量节点」则『递归变量』
        或有「其他」则发生事故于『未有246』
        也。

   

    表达式表示乃（化表达式而字符串）也。
    表达式表示者循表达式表示以会式而
        虑递归者表达式表示而
        鉴式而
            有自由变量于串则（『「』附串附『」』）
            或有式节点于（元变量于数）于【】则（节点名称表示于（（元变量于数）））附『[]』
            或有式节点于（元变量于数）于「式列」则（节点名称表示于（（元变量于数）））附『[...]』
            或有式节点于（静态单例类型节点）于类衔（式节点于（文件引用节点于串）于【】）衔【】则
                （节点名称表示于（静态单例类型节点））附『[<文件正则签名>；』附（表达式表示于（式节点于（文件引用节点于串）于【】））附『]』
            或有式节点于名于「式列」则
                （节点名称表示于名）附『[』附（以『；』合并（态射于（递归）于「式列」））附『]』
            或有绑定于名于体则（鉴名而有（可有串）则串或有「可无」则『_』或有「其他」则发生事故于『np』）附『.』附（递归于体）
            或有绑定变量于数则（数据结构之整数操作之表示于数）
            或有「其他」则发生事故于『未有238』也。

    声明表示乃（化声明而字符串）也。
    声明表示者
        （会声明而鉴声明而
        有文件操作于作于名则（结构名称操作表示于作）附（以『之』合并名）
        或有构造声明于名于类则（名）附『立』附（表达式表示于类）附『也』
        或有类型声明于「透明性」于名于类则（名）附『乃』附（表达式表示于类）附『也』
        或有定义声明于「透明性」于名于式则（表达式表示于名）附
            （鉴透明性而有定义透明则『者』或有定义不透明则『即』）附（表达式表示于式）附『也』
        或有「直接表达式」于式则（表达式表示于式）
        或有操作符声明于名于结则『术』附（名）附『交』附（「操作符结合性表示」于结）附『也』
        或有「其他」则发生事故于『未有234』）
        也。
    
    有也写引用于声明表示引用于声明表示。
    有也写引用于表达式表示引用于表达式表示。

    表示列乃化声明列而字符串也。
    表示列者会列而以『。』合并（态射于（声明表示）于「列」）也。

        
」也。


观抽象语法之书。
观抽象语法表示之书。

表达式完整性检查乃化整数而化表达式而有也。
表达式完整性检查者循表达式完整性检查以会绑定变量上限而会式而
    鉴式而
        有自由变量于名则
            （若存在吗于（会串而「串相等」于串于名）于
                    （态射于（会量而 （内建常量表示于量） ）于所有内建常量）
                则元
                否则发生事故于『表达式不完整，出现自由变量：』附名）
        或有绑定变量于「序数」则
                （若绑定变量上限小于序数
                则发生事故于『表达式不完整，出现绑定变量：』附（整数表示于序数）
                否则元）
        或有绑定于名于「下式」则（表达式完整性检查于（绑定变量上限加一）于下式）
        或有式节点于「名称」于「式列」则（（有列也态射于（表达式完整性检查于绑定变量上限）于「式列」）；元）
        或有「其他」则发生事故于『未有463』
        也。

   
获取可能绑定名乃化表达式而字符串也。
获取可能绑定名者会式而鉴式而
    有绑定于（可有名）于「下式」则名
    或有绑定于（可无）于「下式」则
        （虑名者下个字符序数于『绑』而名）
    或有「其他」则发生事故于『不可读取非绑定式』附（表达式表示于式）
    也。

更新可能绑定名乃化表达式而表达式也。
更新可能绑定名者会式而鉴式而
    有绑定于（可有名）于「下式」则
        （虑名者下个字符序数于名附『_更新_』而
            绑定于（可有名）于「下式」）
    或有绑定于（可无）于「下式」则
        （虑名者下个字符序数于『绑』而
            绑定于（可有名）于「下式」）
    或有「其他」则发生事故于『不可读取非绑定式』附（表达式表示于式）
    也。

绑定变量少一乃化整数而化表达式而表达式也。
绑定变量少一者循绑定变量少一以会减少变量序数而会式而
    尝试运行于（会无而
        鉴式而 
            有自由变量于名则自由变量于名
            或有绑定变量于「序数」则
                （若序数小于「减少变量序数」
                则绑定变量于序数
                否则发生事故于『无法减少绑定变量』）
            或有绑定于名于「下式」则绑定于名于（绑定变量少一于（「减少变量序数」加一）于下式）
            或有式节点于「名称」于「式列」则式节点于名称于（态射于（绑定变量少一于「减少变量序数」）于「式列」）
            「： 或有结构表达式于「声明列」则发生事故于『未有150』 ：」
            或有「其他」则发生事故于『未有487』
        ）于（会异常串而
            发生事故于异常串附『=》在试图减少序数为』附（整数表示于「减少变量序数」）附『的变量，于表达式：』附（表达式表示于式）附『时「：换行：」』
        ）
        也。
        

绑定变量包括乃化整数而化表达式而爻也。
绑定变量包括者循绑定变量包括以会目标变量序数而会式而
        鉴式而 
            有自由变量于名则阴
            或有绑定变量于「序数」则
                （若序数等于「目标变量序数」
                则阳
                否则阴）
            或有绑定于名于「下式」则（绑定变量包括于（「目标变量序数」加一）于下式）
            或有式节点于「名称」于「式列」则（存在吗于（绑定变量包括于「目标变量序数」）于「式列」）
            或有「其他」则发生事故于『未有504』
        也。

抽象是有名的乃化表达式而（爻）也。
抽象是有名的者会式而鉴式而
    有绑定于「可能名」于「下式」则
        （
            绑定变量包括于一于下式
        ）
    或有「其他」则发生事故于『不可解构非抽象式：』附（表达式表示于式）
    也。

        
    
「：解构抽象 结构抽象于λX.X X = (X, X X)，不会重复名称：」
解构抽象乃化表达式而（字符串合表达式）也。
解构抽象者会式而鉴式而
    有绑定于「可能名」于「下式」则
        （虑名者（获取可能绑定名于式）而
            尝试运行于（会无而
                名与（解构替换绑定名非重复于一于（名）于下式） 
            ）于（会错误而
                虑新名者下个字符序数于名而
                新名与（解构替换绑定名非重复于一于（新名）于下式） 
            ）
        ）
    或有「其他」则发生事故于『不可解构非绑定式：』附（表达式表示于式）
    也。

「：使用第一个参数作为序数的模板，将第二个参数转换为绑定：」
构造抽象乃化字符串而化（化字符串而表达式）而表达式也。
构造抽象者会串而会式构造而
    虑新名者下个字符序数于串而
    进行抽象于新名于（式构造于新名）
    也。

抽象表达式带名操作条件乃化字符串列「：返回的字符串必须不出现在这个名中：」而
                    化表达式而化（化字符串而化表达式而表达式）而表达式也。
抽象表达式带名操作条件者会不重复名而会式而会操作而鉴式而
    有绑定于「可能名」于「下式」则
        （虑名者（虑目标名者（获取可能绑定名于式）而
                    「：如果目标名重复，则替换：」
                        若「存在吗」于（「串相等」于目标名）于不重复名则
                        （下个字符序数于目标名）
                        否则（目标名）
                    ）
            而
        
            尝试运行于（会无而
                进行抽象于名于（操作于名于（解构替换绑定名非重复于一于（名）于下式））
            ）于（会错误而
                若（「串相等」于错误于『名称重复』）则（
                    虑新名者下个字符序数于名而
                    进行抽象于新名于（操作于新名于（解构替换绑定名非重复于一于（新名）于下式））
                ）否则（发生事故于「错误」）
            ）
        ）
    或有「其他」则发生事故于『不可解构非绑定式：』附（表达式表示于式）
    也。

抽象表达式操作乃化表达式而化（化表达式而表达式）而表达式也。
抽象表达式操作者会式而会操作而「抽象表达式带名操作条件」于【】于式于（会串而会式而操作于式）也。


「：解构抽象 结构抽象于λX.X X = (X, X X)，其中X必须符合条件，另外X也不会重复表达式中变量：」
解构抽象名称条件乃化表达式而化（化字符串而爻）而（字符串合表达式）也。
解构抽象名称条件者会式而会条件而鉴式而
    有绑定于「可能名」于「下式」则
        （虑名者（获取可能绑定名于式）而
            （虑「
                选名称乃化字符串而字符串也。
                选名称者循选名称以会串而
                    若（条件于串）
                    则串
                    否则（选名称于（下个字符序数于串））也。
                选名者选名称于名也。
                尝试运行于（会无而
                    选名与（解构替换绑定名非重复于一于（选名）于下式）
                ）于（会错误而
                    若（「串相等」于错误于『名称重复』）则（
                        虑新名者下个字符序数于选名而
                            新名与（解构替换绑定名非重复于一于（新名）于下式）
                    ）否则（发生事故于「错误」）
                ）
            」
            ）
        ）
    或有「其他」则发生事故于『不可解构非绑定式：』附（表达式表示于式）
    也。

解构无绑定抽象乃化字符串而化表达式而表达式也。
解构无绑定抽象者会调试信息而会式而鉴式而
    有绑定于（名）于「下式」则
        尝试运行于（会无而绑定变量少一于一于下式）于（会错误而发生事故于错误附『，在解构无绑定抽象时，』附调试信息附『：』附（表达式表示于式））
    或有「其他」则发生事故于『不可解构非绑定式：』附（表达式表示于式）
    也。
「：式替换 X (\Y Z) = [X/Y] Z：」
式替换乃化表达式而化表达式而表达式也。
式替换者会替换式而会被替换式而
    「： 虑不要者打印行于（『试图用』附（表达式表示于替换式）附『对』附（表达式表示于被替换式）附『进行替换』）而 ：」
    鉴被替换式而
        有绑定于（名）于「下式」则
            （解构替换绑定变量于一于替换式于下式）
        或有「其他」则发生事故于（『不可替换非绑定式：』附
        『「：换行：」试图用』附（表达式表示于替换式）附『对』附（表达式表示于被替换式）附『进行替换』）
    也。

「： 式有名替换 X Y Z = [X/Y]Z ：」
式有名替换乃化表达式而化字符串而化表达式而表达式也。
式有名替换者会替换式而会替换自由变量而会被替换式而
    式替换于替换式于（进行抽象于替换自由变量于被替换式）也。

结构名称转表达式乃化字符串列而表达式也。
结构名称转表达式者循结构名称转表达式以会名称而
    鉴名称而
        有【】则发生事故于『不可为空』
        或有单衔【】则自由变量于单
        或有「其他」则式节点于
            （结构投影于（第N个于（（长度于名称）减一）于名称））于
            【结构名称转表达式于（取于（（长度于名称）减一）于名称）】也。

「： Simultaneous Substitutions ：」
同时式替换乃化表达式列而化字符串列而化表达式而表达式也。
同时式替换者会替换而会变量而会前式而
    若（（长度于替换）不等于（长度于变量））
    则发生事故于『同时替换，长度不同』
    否则（
        虑抽象后式者从右折叠于（会变而会式而
            进行抽象于变于式
            ）于前式于变量而
        虑替换后式者从左折叠于（会替而会式而
            式替换于替于式
        ）于抽象后式于替换而
        替换后式
    ）也。

「：会包含重复的：」
读取自由元变量乃化表达式而整数列也。
读取自由元变量者循读取自由元变量以会式而
    鉴式而有自由变量于名则【】
    或有绑定变量于名则【】
    或有式节点于（元变量于数）于参则【数】
    或有式节点于（「其他节点」）于参则「串联」于（态射于「读取自由元变量」于参）
    或有绑定于名于「下式」则读取自由元变量于下式
    也。

「：会包含重复的：」
读取模式匹配新变量乃化表达式而字符串列也。
读取模式匹配新变量者循读取模式匹配新变量以会式而
    鉴式而有自由变量于名则【】
    或有绑定变量于名则【】
    或有式节点于（模式匹配新变量于名）于参则【名】
    或有式节点于（「其他节点」）于参则「串联」于（态射于「读取模式匹配新变量」于参）
    或有绑定于名于「下式」则读取模式匹配新变量于下式
    也。

「：会包含重复的：」
读取式自由变量乃化表达式而字符串列也。
读取式自由变量者循读取式自由变量以会式而
    虑结果者（字符串列也 （鉴式而有自由变量于名则【名】
                或有式节点于（模式匹配分支）于「模式」衔「结果」衔【】则
                    （「列减」于「串相等」于（（读取式自由变量于「模式」）接（读取式自由变量于结果））于（读取模式匹配新变量于模式））
                或有式节点于（其他节点）于参则「串联」于（态射于「读取式自由变量」于参）
                或有绑定于名于「下式」则读取式自由变量于（下式）
                或有绑定变量于名则【】））而
    「： 虑无者（打印行于『读取表达式自由变量：』附（表达式表示于式）附『。得到了自由变量：』附（以『，』合并（结果）））而 ：」
        结果
    也。

自由变量在式出现乃化字符串而化表达式而爻也。
自由变量在式出现者会串而会式而
    「存在吗」于（「串相等」于串）于（读取式自由变量于式）也。

自由变量不在式出现乃化字符串而化表达式而爻也。
自由变量不在式出现者会串而会式而
    非于（自由变量在式出现于串于式）也。

自由变量在式出现次数乃化字符串而化表达式而整数也。
自由变量在式出现次数者循自由变量在式出现次数以会串而会式而
     （鉴式而有自由变量于名则（若「串相等」于名于串则一否则零）
                或有式节点于「其他节点」于参则「具体列」之「求和」于（态射于（自由变量在式出现次数于串）于参）
                或有绑定于名于「下式」则自由变量在式出现次数于串于（下式）
                或有绑定变量于名则零）
    也。
    
「：获取所有的依赖文件名，会包含重复的：」
读取文件引用依赖乃化表达式而字符串列也。
读取文件引用依赖者循读取文件引用依赖以会式而
    鉴式而有自由变量于名则【】
    或有绑定变量于名则【】
    或有式节点于（文件引用节点于串）于【】则【串】
    或有式节点于（「其他节点」）于参则「串联」于（态射于「读取文件引用依赖」于参）
    或有绑定于名于「下式」则读取文件引用依赖于下式
    也。

