寻标准库之书。
观标准库之书。

寻顺序标识符之顺序标识符之书。
观顺序标识符之顺序标识符之书。

注：文件路径，（开始行，开始列），（结束行表，结束列）。
源码信息者字符串合（整数合整数）合（整数合整数）也。

表示源码信息乃化源码信息而字符串也。
表示源码信息者会信息而（信息中零）附『:』附（表示于信息中一中零）
    附『:』附（表示于信息中一中一）附『-』
    附（表示于信息中二中零）附『:』附（表示于信息中二中一）也。

结构语法者「

    语法分析树立元类型也。

    注；空白文件。
    注：使用句号分隔。
    连续语句立化语法分析树列而语法分析树也。
    注：（）。
    圆括号表达式立化语法分析树而语法分析树也。
    注：「」。
    方括号表达式立化语法分析树而语法分析树也。
    注：单个字符。
    字符立化字符串而语法分析树也。
    「：单个分隔字符（空格，制表，换行）：」
    分隔符立语法分析树也。
    注：连续的字符或者括号。
    连续表达式立化语法分析树列而语法分析树也。
    注：字符串常量。
    字符串常量立化字符串而语法分析树也。

    空者连续表达式于【】也。

    「：添加连续表达式于甲于乙 会把乙加到甲后面：」
    添加连续表达式乃化语法分析树而化语法分析树而语法分析树也。
    添加连续表达式者会甲而会乙而
        鉴甲而
        有连续表达式于式们则连续表达式于（式们接【乙】）
        或有「其他」则连续表达式于（【甲，乙】）也。
    添加连续语句乃化语法分析树而化语法分析树而语法分析树也。
    添加连续语句者会甲而会乙而
        鉴甲而
        有连续语句于句们则连续语句于（句们接【乙】）
        或有「其他」则连续语句于（【甲，乙】）也。

    获取语句乃化语法分析树而语法分析树列也。
    获取语句者会树而鉴树而
        有连续语句于句们则句们
        或有「其他」则【「其他」】也。

    获取表达式乃化语法分析树而语法分析树列也。
    获取表达式者会树而鉴树而
        有连续表达式于式们则式们
        或有「其他」则【「其他」】也。

    为纯名称乃化语法分析树列而爻也。
    为纯名称者会名而
        （长度于（滤于（会甲而鉴甲而
                有「字符」于字则阳
                或有「其他」则阴
            ）于名））
        等于 （长度于名）也。
    
    获取纯名称乃化语法分析树列而字符串也。
    获取纯名称者会名而
        「串组合并」于（态射于（会甲而鉴甲而
                有「字符」于字则字
                或有「其他」则（发生事故于『纯名称中含有其他东西』）
            ）于名）
        也。

」也。

结构语法表示者「
    观结构语法之书。
    表示乃化结构语法之语法分析树而字符串也。
    表示者循递归以会树而鉴树而
        有连续语句于句们则（『（连续语句）』附（以『。「：换行：」』合并（态射于递归于「句们」）））
        或有连续表达式于式们则以『·』合并（态射于递归于式们）
        或有字符于甲则甲
        或有分隔符则『|』
        或有字符串常量于串则表示串于串
        或有圆括号表达式于甲则『（』附（递归于甲）附『）』
        或有方括号表达式于甲则『「』附（递归于甲）附『」』
        或有「其他」则发生事故于『未有41』
        也。

    表示列乃化结构语法之语法分析树列而字符串也。
    表示列者会树们而表示于（连续表达式于树们）也。
」也。

结构名称操作立元类型也。「：寻观诵：」
    结构寻立结构名称操作也。
    结构寻观立结构名称操作也。
    结构寻观诵立结构名称操作也。
    结构寻诵立结构名称操作也。
    结构观立结构名称操作也。
    结构观诵立结构名称操作也。
    结构诵立结构名称操作也。

结构名称操作表示乃化结构名称操作而字符串也。
结构名称操作表示者会名称而
    鉴名称而
    有结构寻则『寻』
    或有结构寻观则『寻观』
    或有结构寻观诵则『寻观诵』
    或有结构寻诵则『寻诵』
    或有结构观则『观』
    或有结构观诵则『观诵』
    或有结构诵则『诵』也。


粗语法者「

    观结构语法之书。
    
    粗声明立元类型也。
        粗文件操作立化结构名称操作而化结构语法之语法分析树列而粗声明也。
        粗构造声明立化语法分析树列而化语法分析树列而粗声明也。 
        粗类型声明立化语法分析树列而化语法分析树列而粗声明也。
        粗定义声明立化语法分析树列而化语法分析树列而粗声明也。
        粗直接表达式立化语法分析树列而粗声明也。
」也。

粗语法表示者「
    观粗语法之书。
    表示乃化粗声明而字符串也。
    表示者循递归以会粗声明而鉴粗声明而
        有粗文件操作于作于名则（结构名称操作表示于作）附（结构语法表示之「表示列」于名）
        或有粗构造声明于名于类则（结构语法表示之「表示列」于名）附『立』附（结构语法表示之「表示列」于类）附『也』
        或有粗类型声明于名于类则（结构语法表示之「表示列」于名）附『乃』附（结构语法表示之「表示列」于类）附『也』
        或有粗定义声明于名于类则（结构语法表示之「表示列」于名）附『者』附（结构语法表示之「表示列」于类）附『也』
        或有「粗直接表达式」于式则（结构语法表示之「表示列」于式）
        也。
    表示列乃化粗声明列而字符串也。
    表示列者会列而以『。』合并（态射于表示于「列」）也。
」也。

内建常量立元类型也。
    内建类型字符串立内建常量也。
    内建类型整数立内建常量也。
    内建类型小数立内建常量也。
    内建类型动态分类值立内建常量也。
    内建类型有立内建常量也。
    内建类型爻立内建常量也。
    内建类型元类型立内建常量也。
    内建爻阳立内建常量也。
    内建爻阴立内建常量也。
    内建有元立内建常量也。

内建常量表示乃化内建常量而字符串也。
内建常量表示者会量而鉴量而
    有「内建类型字符串」      则『《《内建类型：字符串》》』
    或有「内建类型整数」        则『《《内建类型：整数》》』
    或有「内建类型小数」       则『《《内建类型：小数》》』
    或有「内建类型动态分类值」     则『《《内建类型：动态分类值》》』
    或有「内建类型有」         则『《《内建类型：有》》』
    或有「内建类型爻」         则『《《内建类型：爻》》』
    或有「内建类型元类型」       则『《《内建类型：元类型》》』
    或有「内建爻阳」          则『《《内建爻：阳》》』
    或有「内建爻阴」          则『《《内建爻：阴》》』
    或有「内建有元」          则『《《内建有：元》》』
    也。

所有内建常量者
【
    「内建类型字符串」    ，
    「内建类型整数」     ，
    「内建类型小数」     ，
    「内建类型动态分类值」  ，
    「内建类型有」      】
接【
    「内建类型爻」      ，
    「内建类型元类型」    ，
    「内建爻阳」       ，
    「内建爻阴」       ，
    「内建有元」       
】也。

「： 内建常量表示乃化内建常量而字符串也。
内建常量表示者会量而
    鉴量而
        有「内建类型元类型」则『Set』
        或有「其他」则（发生事故于『未有133』）也。 ：」


抽象语法者「
    「：valence，表达一个ABT节点的参数类型：」
    语法类立元类型也。
        元类立语法类也。
        函类立化语法类而化语法类而语法类也。

    「：TODO： Use this depdenet types：」
    「： 节点名称立化语法类列而元类型也。
        拉姆达抽象立节点名称于（【函类于（元类）于（元类）】）也。
        内建节点立化内建常量而节点名称于（【】）也。
        空缺立节点名称于（【】）也。
        派抽象立节点名称于（【元类，函类于（元类）于元类】）也。 ：」

    参数形式立元类型也。
        隐式立参数形式也。
        显式立参数形式也。

    节点名称立元类型也。
        拉姆达抽象立节点名称也。
        内建节点立化内建常量而节点名称也。
        空缺立节点名称也。
        派抽象立化参数形式而节点名称也。
        字符串节点立化字符串而节点名称也。
        函数调用立化参数形式而节点名称也。
        模式匹配分支立节点名称也。「：case caluse：」
        模式匹配立节点名称也。「：case， 第一个参数是被匹配对象，之后每个参数是一个分支：」
        结构投影立化字符串而节点名称也。
        爻分支节点立节点名称也。


    声明立元类型也。
    表达式立元类型也。
        文件操作立化结构名称操作而化字符串列而声明也。
        构造声明立化字符串而化表达式而声明也。 
        类型声明立化字符串而化表达式而声明也。
        定义声明立化表达式而化表达式而声明也。
        直接表达式立化表达式而声明也。

        结构立化声明列而表达式也。
        式节点立化节点名称而化表达式列而表达式也。
        绑定立化（或可有字符串）「：可能的字符串：」而化表达式而表达式也。「：使用deBruijn：」
        绑定变量立化整数而表达式也。
        自由变量立化字符串而表达式也。

    内建乃化内建常量而表达式也。
    内建者会甲而（式节点于（内建节点于甲）于【】）也。
        
    抽象替换自由变量乃化字符串而化整数而化表达式而表达式也。
    抽象替换自由变量者循抽象替换自由变量以会绑名而会当前序数而会式而
        鉴式而 
            有自由变量于名则
                （若「串相等」于名于绑名
                则绑定变量于当前序数
                否则式
                ）
            或有绑定变量于序数则绑定变量于序数
            或有绑定于名于下式则绑定于名于（抽象替换自由变量于绑名于（当前序数加一）于下式）
            或有式节点于名称于「式列」则式节点于名称于（态射于（抽象替换自由变量于绑名于当前序数）于「式列」）
            或有结构于「声明列」则发生事故于『未有150』
            或有其他则发生事故于『未有152』
    也。
    
    「：构造抽象 进行抽象于X于X X = λX.X X：」
    进行抽象乃化字符串而化表达式而表达式也。
    进行抽象者会绑名而会式而
        绑定于（可有绑名）于（抽象替换自由变量于绑名于一于式）
        也。

    进行无名抽象乃化表达式而表达式也。
    进行无名抽象者会式而
        绑定于（可无）于（式）
        也。

    解构替换绑定变量乃化整数而化表达式而化表达式而表达式也。
    解构替换绑定变量者循解构替换绑定变量以会当前序数而会替换式而会式而
        鉴式而 
            有自由变量于名则自由变量于名
            或有绑定变量于序数则
                （若当前序数等于序数
                则替换式
                否则绑定变量于序数）
            或有绑定于名于下式则绑定于名于（解构替换绑定变量于（当前序数加一）于替换式于下式）
            或有式节点于名称于「式列」则式节点于名称于（态射于（解构替换绑定变量于当前序数于替换式）于「式列」）
            或有结构于「声明列」则发生事故于『未有150』
            或有其他则发生事故于『未有152』
    也。
    
    「：解构抽象 结构抽象于λX.X X = (X, X X)：」
    解构抽象乃化表达式而（字符串合表达式）也。
    解构抽象者会式而鉴式而
        有绑定于（可有名）于下式则
            名与（解构替换绑定变量于一于（自由变量于名）于下式）
        或有绑定于（可无）于下式则
            （虑「名者下个字符序数于『绑』也。
            」以成
            名与（解构替换绑定变量于一于（自由变量于名）于下式）之道）
        或有「其他」则发生事故于『不可解构非绑定式』
        也。
    
    「：式替换 X (\Y Z) = [X/Y] Z：」
    式替换乃化表达式而化表达式而表达式也。
    式替换者会替换式而会被替换式而鉴被替换式而
        有绑定于（名）于下式则
            （解构替换绑定变量于一于替换式于下式）
        或有「其他」则发生事故于『不可替换非绑定式』
        也。
            
」也。



抽象语法表示者「
    观抽象语法之书。

    节点名称表示乃化（节点名称）而字符串也。
    节点名称表示者会名而鉴名而
        有拉姆达抽象则『λ』
        或有（内建节点于常量）则（内建常量表示于常量）
        或有空缺则『「」』
        或有派抽象于参式则『Π』
        或有函数调用于参式则『ap』
        或有字符串节点于串则『『』附串附『「：』：」』
        或有模式匹配分支则『|→』
        或有模式匹配则『case』
        或有结构投影于串则『↘』附串附『↙』
        「： 或有「其他」则『节点名称？？？』 ：」
        或有「爻分支节点」则『如果』
        或有「其他」则发生事故于『未有246』
        也。

    「：mutual recursion hack：」
    声明表示引用乃引用类于（化声明而字符串）也。
    声明表示引用者新引用于（（化声明而字符串）也会甲而发生事故于『未赋值』）也。

    表达式表示乃（化表达式而字符串）也。
    表达式表示者循递归以会式而鉴式而
            有结构于明则『「』附（以『。』合并（态射于（读引用于声明表示引用）于明））附『」』
            或有自由变量于串则（串）
            或有式节点于名于「式列」则
             「： 『式节点』 ：」
            （节点名称表示于名）附『[』附（以『；』合并（态射于（递归）于「式列」））附『]』
            「： （节点名称表示于名） ：」
            「： （以『；』合并（态射于（递归）于「式列」）） ：」
            或有绑定于名于体则（鉴名而有（可有串）则串或有「可无」则『_』或有「其他」则发生事故于『np』）附『.』附（递归于体）
            或有绑定变量于数则（数据结构之整数操作之表示于数）
            或有「其他」则发生事故于『未有238』也。
    声明表示乃（化声明而字符串）也。
    声明表示者
        （会声明而鉴声明而
        有文件操作于作于名则（结构名称操作表示于作）附（以『之』合并名）
        或有构造声明于名于类则（名）附『立』附（表达式表示于类）附『也』
        或有类型声明于名于类则（名）附『乃』附（表达式表示于类）附『也』
        或有定义声明于名于类则（表达式表示于名）附『者』附（表达式表示于类）附『也』
        或有「直接表达式」于式则
                                「： 『直接表达式』 ：」
                                （表达式表示于式）
        或有「其他」则发生事故于『未有234』）
        也。
    
    有也写引用于声明表示引用于声明表示。

    表示列乃化声明列而字符串也。
    表示列者会列而以『。』合并（态射于（声明表示）于「列」）也。

        
」也。