
寻标准库之书。
观标准库之书。

寻具体语法树之书。
观具体语法树之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。




寻观豫言编译器之编译数据之操作符之操作符操作之书。

寻函数合集之书。



寻观豫言编译器之编译数据之操作符之操作符数据结构之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。


抽栈素立元类型也。

「： 表达式即结构语法之语法分析树也。 ：」

「： 表达式即抽象语法之表达式也。 ：」
「： 观结构语法之书。 ：」
「： 语者结构语法也。 ：」


「：把相同关键词的归为一组：」
合并操作符栈素乃化「符列环境」而化栈素列「：已有：」而
             化（字符串「：当前操作符的字符串：」合（操作符合整数）「：当前操作符：」合表达式列「：剩余栈素：」）列而
             「：返回已有，单个栈素，剩余输入：」
            （栈素列合栈素列合表达式列）列也。
合并操作符栈素者循合并操作符栈素以会境而会已有而会待处理而
    鉴待处理而
        有【】则【】
        或有（「关键词」与（「操符」与「序号」）与「后输入」）衔「待处理尾」则
            「：我们挑出处理尾中相同长度的关键词组件放在一起，剩余的再继续处理：」
            （已有与（【栈操作符于境于（
                （「操符」与「序号」）衔
                    （滤态射于（会项而
                        若（（串长度于关键词）等于（串长度于（三对子取零于项）））
                        则（可有（项中一））
                        否则「可无」
                    ）于待处理尾））】
            ）与「后输入」）衔
            （
                「合并操作符栈素」于境于已有于（
                    （滤于（会项而
                        （（串长度于关键词）不等于（串长度于（三对子取零于项）））
                    ）于待处理尾）
                ）
            ）也。


匹配操作符字符乃化表达式列「：输入：」而
                化（操作符「：关键词所在操作符：」合整数「：字符串组件序号：」）列而
                （字符串「：当前操作符的字符串：」合（操作符合整数）「：当前操作符：」合表达式列「：剩余栈素：」）列
                也。
匹配操作符字符者（会输入而会符序们而
    虑「
        匹配符序们者（滤态射于（会符序而
                        虑操符者二对子取零于符序而
                        虑序号者二对子取一于符序而
                        虑关键词者获取操作符组件字符串于操符于序号而
                            鉴顶层匹配于输入于（获取字符于关键词）
                                而有（可有「后输入」）则可有（关键词与（操符与序号）与后输入）
                                或有「可无」则「可无」
                    ）于符序们）也。

        匹配符序们。
    」
    ）也。

匹配操作符字符随后合并栈素乃化「符列环境」「：当前环境：」而
                化栈素列「：已有栈素，应当不会改变：」而
                化表达式列「：输入：」而
                化（操作符「：关键词所在操作符：」合整数「：字符串组件序号：」）列而
                （栈素列合栈素列合表达式列）列「：如果顶层匹配成功，返回作为关键字的栈素以及之后的输入：」
                也。
匹配操作符字符随后合并栈素者（会境而会已有而会输入而会符序们而
    虑「
        匹配符序们者匹配操作符字符于输入于符序们也。
        「合并操作符栈素」于境于已有于匹配符序们。
    」
    ）也。

「：扫描绑定返回绑定式和下一个字符串组件：」
扫描绑定乃化表达式列而化组件而化栈素而（或可有（栈素列合表达式列））也。
扫描绑定者会输入而会截止而会截止栈素而
    虑（
        「处理括号表达式」乃化表达式列「：括号内容：」而化表达式列「：括号后内容：」而（或可有（栈素列合表达式列））也。
        「处理括号表达式」者（会括号内而会括号后而
            若为纯名称于括号内则
                （鉴顶层匹配于括号后于（获取字符于（读取组件字符串于截止））而
                    有（可有「余下输入」）则（可有（【（栈绑定于（获取纯名称于括号内）），截止栈素】与余下输入））
                    或有（可无）则 （可无） 
                ）
            否则「可无」）
            也。


        「：TODO：处理空字符串的情况：」
        扫描乃化表达式列而化字符串而（或可有（栈素列合表达式列））也。
        扫描者循扫描以会当前输入而会累加而
            （鉴顶层匹配于当前输入于（获取字符于（读取组件字符串于截止））而
                有（可有「余下输入」）则（
                    若「串相等」于「累加」于『』
                    则（可无）「：绑定名称不可为空名称？：」
                    否则（可有（【（栈绑定于「累加」）】与当前输入））
                    ）
                或有（可无）则（鉴当前输入而
                    有（式节点于（具体字符节点于「输入字」）于【】）衔「输入尾」则扫描于输入尾于（「累加」附输入字）
                    或有（式节点于具体方括号表达式节点于（「可能名称」））衔「输入尾」则
                        （若「串相等」于「累加」于『』
                        则处理括号表达式于「可能名称」于输入尾
                        否则（可无）「：名称必须一开始出现绑定，不可中途出现：」）
                    或有（式节点于具体圆括号表达式节点于（「可能名称」））衔「输入尾」则
                        （若「串相等」于「累加」于『』
                        则处理括号表达式于「可能名称」于输入尾
                        否则（可无）「：名称必须一开始出现绑定，不可中途出现：」）
                    或有「其他」则「可无」
                ）
            ）也。

            扫描于输入于『』。
    ）也。


处理连续语句乃化「符列环境」而化表达式列而表达式也。
处理连续语句者会符列而会语句而
    虑（
        粗者读引用于（「函数合集」之粗分析编译单元引用）于（语句）也。
        结构者读引用于（「函数合集」之抽象语法解析编译单元引用）于「符列」于粗也。
        结构
    ）也。

「处理圆括号表达式内容」乃化「符列环境」而化表达式列而表达式也。
「处理圆括号表达式内容」者会符列而会语句而
    鉴语句而
        有（式节点于「具体连续语句节点」于句）衔【】则（
           处理连续语句于「符列」于语句 
        ）
        或有「其他语」则（
            式节点于括号表达式于【（读引用于（「函数合集」之解表达式引用））于「符列」于其他语「：直接递归编译其他语：」】
        ）也。

「处理方括号表达式内容」乃化「符列环境」而化表达式列而表达式也。
「处理方括号表达式内容」者会符列而会语句而
    鉴语句而
        有（式节点于「具体连续语句节点」于句）衔【】则（
           处理连续语句于「符列」于语句 
        ）
        或有「其他语」则（
            若（为纯名称于语句）
                    则（
                        虑纯名称者（获取纯名称于语句）而
                        若（（串长度于「纯名称」）大于零）
                        则自由变量于纯名称
                        否则（式节点于（空缺）于【】）
                        ）
                    否则（
                （（读引用于（「函数合集」之解表达式引用））于「符列」于语句）
                ）
        ）也。

 「：已经获取了一部分陌生字，持续获取直到陌生字结束：」
获取陌生字直到结束乃化「符列环境」而化栈素列而化表达式列而字符串合表达式列也。
获取陌生字直到结束者循获取陌生字直到结束以会符列而会已有而会剩余输入而
    鉴剩余输入而
        有【】则『』与【】
        或有（式节点于具体分隔符节点于【】）衔尾则『』与尾
        或有（式节点于（具体字符节点于始）于【】）衔尾则（
            虑关键词们者「获取所有关键词」于「符列」中零中零而
            虑可能解析者「匹配操作符字符随后合并栈素」于「符列」于「已有」于剩余输入于关键词们
            而（
                若「大于」于（长度于可能解析）于零
                则『』与剩余输入
                否则（
                    虑递归结果者（获取陌生字直到结束于「符列」于已有于尾）而
                    （始附（递归结果中零）） 与 （递归结果中一）
                ）
            ） 
        ）
        或有「其他」则 『』与剩余输入
        也。



「：匹配可以作为开始的操作符：」
处理下个字符开始乃化「符列环境」而化栈素列而化表达式列而（栈素列合栈素列合表达式列）列也。
处理下个字符开始者循处理下个字符开始以会符列而会已有而会输入而
（
    鉴输入而
        有【】则【】
        或有 （式节点于（具体字符节点于始）于【】）衔尾则（
            虑关键词们者「获取所有开始关键词」于「符列」中零中零而
            虑可能解析者「匹配操作符字符随后合并栈素」于「符列」于「已有」于输入于关键词们
            而（
                若「大于」于（长度于可能解析）于零
                则可能解析
                否则（
                    虑陌生字结果者（获取陌生字直到结束于「符列」于已有于输入）而
                    「：检查陌生字长度，如果没有陌生字，有可能字符“始”是中间的关键字，这时我们也不解析：」
                    若（（「串长度」于（陌生字结果中零））大于零）
                    则【「已有」与【栈陌生字于（陌生字结果中零）】 与 （陌生字结果中一）】
                    否则【】
                ）
            ） 
        ）
        或有（式节点于具体分隔符节点于【】）衔尾
            则（处理下个字符开始于「符列」于已有于尾）
        「： 或有（式节点于具体圆括号表达式节点于（（式节点于「具体连续语句节点」于句）衔尾））衔尾则（
                【已有与【栈式于（处理连续语句于「符列」于句）】与尾】
            ） ：」
        或有（式节点于具体圆括号表达式节点于（「内容」））衔尾
            则（【已有与【（栈式于
                （处理圆括号表达式内容于「符列」于「内容」）
            ）】与尾】）
        或有（式节点于（字符串节点于串）于【】）衔尾则（
                【已有与【（栈式于（式节点于（字符串节点于串）于【】））】与尾】）
        「： 或有（式节点于具体方括号表达式节点于（式节点于「具体连续语句节点」于句衔尾）衔【】）衔尾则（
                【已有与【栈式于（处理连续语句于「符列」于句）】与尾】
            ） ：」
        或有（式节点于具体方括号表达式节点于「内容」）衔尾则（
                【已有与【栈式于（
                        处理方括号表达式内容于「符列」于「内容」
                    ）】
                与尾】
            ）
        或有「其他2」则（发生事故于（『解表73：输入是』附（「表达式列表示」于输入）））
    ）也。


「：匹配可以作为一个操作符后续的操作符，
也就是获取的新操作符组件必须可以消除前面的输入
，不可以添加新的组件：」
「：我们目前假设不存在连续的参数组件，TODO：探究可否放松该要求：」
处理下个字符后续乃化「符列环境」而化栈素列而化表达式列而（栈素列合栈素列合表达式列）列也。
处理下个字符后续者循处理下个字符后续以会符列而会已有而会输入而
    （
        鉴输入而
            有【】则【】
            或有 （式节点于（具体字符节点于始）于【】）衔尾则（
                    虑关键词们者「获取所有继续关键词」于一于「符列」中零中零而
                    虑可能解析者「匹配操作符字符随后合并栈素」于「符列」于「已有」于输入于关键词们
                    而（
                        若「大于」于（长度于可能解析）于零
                        则可能解析
                        否则（【】）
                    ） 
            ）
            或有（式节点于具体分隔符节点于【】）衔尾
                则（处理下个字符后续于「符列」于已有于尾）
            或有（式节点于具体圆括号表达式节点于（「其他语」））衔尾
                则（【】）
            或有（式节点于（字符串节点于串）于【】）衔尾
                则（【】）
            或有（式节点于具体方括号表达式节点于「式们」）衔尾
                则（【】）
            或有「其他2」则（发生事故于（『解表73：输入是』附（「表达式列表示」于输入）））
        ）也。



「：输入头部
    如果是字符则查询对应的关键字，可能有多个匹配项，
        若无匹配，则查询最长的不认识的名字：」
分析输入乃化「符列环境」而化栈素列而化表达式列而化（化字符串而化栈素列而有）而
        （栈素列「：新的已有，倒序：」合栈素列「：正顺序：」合表达式列）列也。
        「：分析输入会返回新的已有栈，因为对于输入的分析可能会使得栈上的元素发生改变，
        我们要保证所有的返回的输入解析一定可以被规约，所以要在解析时排除不可规约的可能性：」
分析输入者会符列而会已有而会输入而会调试而
        
            「：查找下一个操作符在已有栈中的序数：」
            鉴（查找元素序数条件于（会素而鉴素而有（栈操作符于「先境」于「整符及序号们」）则阳或有「其他素」则阴）于「已有」）而
                有（可有「序数」）则（「：序数表示栈顶到第一个操作符所要跳过的表达式的个数：」
                    若序数大于零则
                    （
                        「：序数必须是一，因为我们假设不存在两个连续的参数。两个连续的参数将会使得很多的优化都不可以执行。：」
                        若序数大于一
                        则发生事故于『栈上不应当存在连续表达式！』
                        否则（
                                虑「
                                    获得可能操作符匹配结果乃化整数「：当前检查的字符串组件在已有栈中序数，
                                    根据单参数假设，序数必须指向一个字符串组件，
                                    组件的序数加二即是下个要匹配输入 （此处序数含义发生改变！有栈序数和组件序数）
                                    ：」而（字符串「：当前操作符的字符串：」合（操作符合整数）「：当前操作符：」合表达式列「：剩余栈素：」）列也。
                                    获得可能操作符匹配结果者循获得可能操作符匹配结果以会序数而
                                        鉴（第N个于序数于「已有」）而
                                            有（栈操作符于「先境」于「当前符序们」）则
                                                （「：TODO 这边应当更新第N个，而不是复制：」
                                                    虑无者非常详细调试打印行于（会无而『[D][D]正在匹配操作符，序数：』附（整数表示于序数）附『，操作符：』附（栈素表示于（栈操作符于「先境」于「当前符序们」）））而
                                                    虑操作符后续解析者（「串联」于（态射于（会当前符序而
                                                        虑整符者二对子取零于当前符序而
                                                        虑序号者二对子取一于当前符序而
                                                        虑组件们者「获取所有组件」于「整符」而
                                                        「：取得输入组件的位置：」
                                                        若（序号加二）小于（长度于组件们）
                                                        「：下一个输入仍然是组件内部：」
                                                        则（虑下个组件者第N个于（序号加二）于组件们
                                                            而
                                                                若组件是字符串组件于（第N个于（序号加二）于组件们）
                                                                    则（（匹配操作符字符于输入于【「整符」与（序号加二）】）
                                                                      ）
                                                                    否则（「：下个字符是表达式，如果我们强制不可以出现连续的表达式参数，这个case是不可能的：」
                                                                        「： 处理下个字符开始于「符列」于输入 ：」
                                                                        发生事故于『组件中纯真连续的参数』
                                                                    ）
                                                            ）
                                                        否则（
                                                            若（序号加二）等于（长度于组件们）「：正好是这个组件的完结，我们去寻找上一个组件：」
                                                            则（
                                                                虑下个序数者（序数加（序号加一））
                                                                而若下个序数小于（长度于「已有」）「：栈中仍然存在上个组件：」
                                                                则（获得可能操作符匹配结果于下个序数）
                                                                否则（【】）「：栈中不存在上个组件：」
                                                            ）
                                                            否则（发生事故于『组件的长度不正确』）
                                                        ）
                                                    ）于当前符序们））而
                                                    「： 虑无者打印行于『操作符后续解析长度：』附（整数表示于（长度于（操作符后续解析）））而 ：」
                                                    操作符后续解析
                                                ）
                                            或有「其他栈操作符」则发生事故于『不可能285，期待栈操作符』也。


                                    （「合并操作符栈素」于「符列」于已有于（获得可能操作符匹配结果于序数））
                                        接（处理下个字符后续于「符列」于已有于输入）
                                」
                            ）
                        
                    ）
                    否则（
                        「：序数等于零， 后面可以是任意表达式：」
                        鉴「已有」而
                            「：我们需要特殊处理绑定式：」
                            有（栈操作符于「先境」于「整符及序号们」）衔尾则「：我们默认栈操作符不是结尾，结尾操作符必须归一，所以本操作符后必须跟一个表达式：」
                                （
                                    「：处理绑定后续，我们会每个绑定单独分出一个分支，此处没有优化：」
                                    （「串联」于（态射于（会整符及序号而
                                        虑整符者二对子取零于整符及序号而
                                        虑序号者二对子取一于整符及序号而
                                        鉴（「获取随后的绑定信息」于整符于序号）而
                                            有（可有「次字」）则（
                                                鉴（扫描绑定于输入于次字于（栈操作符于「先境」于【「整符」与（「序号」加二）】））
                                                    而有可有「绑素后」则【（（栈操作符于「先境」于【「整符」与（「序号」）】）衔尾）与（「绑素后」中零）与（「绑素后」中一）】
                                                    或有「可无」则【】）「：绑定必须解析成功，否则报错：」
                                            或有（可无）则（【】）
                                    ）于「整符及序号们」））
                                    接
                                    （
                                        「：处理非绑定后续：」
                                        虑非绑定符序们者滤于（会整符及序号而
                                            虑整符者二对子取零于整符及序号而
                                            虑序号者二对子取一于整符及序号而
                                                鉴（「获取随后的绑定信息」于整符于序号）而
                                                    有（可有「次字」）则（
                                                        阴
                                                    ）
                                                    或有（可无）则（
                                                        阳
                                                    ）
                                            ）于「整符及序号们」而
                                            若（（长度于非绑定符序们）大于零）
                                            则（处理下个字符开始于「符列」于（（栈操作符于「先境」于非绑定符序们）衔尾）于输入）
                                            否则【】
                                    ）
                                ）
                            或有「其他已有」则（
                                处理下个字符开始于「符列」于已有于输入
                            ）
                    ）
                ）
                或有（可无）则（
                    若（长度于「已有」）大于零则
                    （
                        处理下个字符后续于「符列」于已有于输入「：栈上有表达式，可以处理后续的字符：」
                    ）
                    否则（
                        处理下个字符开始于「符列」于已有于输入「：我们刚开始，可以处理开始的字符：」
                    ））
        
        也。