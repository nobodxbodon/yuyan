
寻标准库之书。
观标准库之书。

寻具体语法树之书。
观具体语法树之书。

寻表达式解析之书。
观表达式解析之书。

寻内建操作符之书。
观内建操作符之书。

寻操作符集术之书。
观操作符集术之书。


寻函数合集之书。

寻命名环境术之书。
观命名环境术之书。

寻导入解析之书。

寻豫言编译器之文件管理之编译文件信息之书。
观豫言编译器之文件管理之编译文件信息之书。
寻顺序标识符之顺序标识符之书。
观顺序标识符之顺序标识符之书。


「：unif bug：」
粗声明者粗语法之粗声明也。
声明者抽象语法之声明也。


纯名称不含括号乃化分析树列而字符串也。
纯名称不含括号者循递归以会树而
        「串组合并」于（态射授以分析树授以字符串于（会式而鉴式而
            有结构语法之字符于甲则甲
            或有其他则发生事故于（『抽23：纯名称中有其他东西：』附（结构语法表示之表示于（结构语法之连续表达式于树）））
        ）于树）也。




纯名称含括号乃化分析树列而字符串也。
纯名称含括号者循递归以会树而
    鉴树而
      有（结构语法之圆括号表达式于（结构语法之连续表达式于式））衔【】则递归于式
      或有（结构语法之方括号表达式于（结构语法之连续表达式于式））衔【】则递归于式
      或有其他则纯名称不含括号于树也。

语法分析树者结构语法之语法分析树也。「：CPS Unif Bug：」
「：化用表达式解析的栈， 栈分隔符对应之，栈陌生字对应结构名：」
解结构名乃化栈素列而化结构语法之语法分析树列而字符串列也。
解结构名者循解结构名以会栈而会输入而
    鉴栈与输入而
        「：开始：」
        有【】与【】则发生事故于『名称不可为空』
        「：开始与结束：」
        或有全栈与（（语之字符于『之』）衔【】）则发生事故于『之字不可作结尾』
        或有【】与「其他输入」则解结构名于【栈分隔符】于输入
        「：中间输入：」
            「：分隔符代表之，也代表某个括起来的名称所以有的时候需要看括号后面是不是·之·：」
        或有（全栈）与（（语之字符于『之』）衔（语之字符于『之』）衔输入尾）则发生事故于『不可出现两个相同的之』
        或有（栈陌生字于串）衔栈尾与（（语之字符于『之』）衔输入尾）则解结构名于（栈分隔符衔（栈陌生字于串）衔栈尾）于输入尾
        或有（栈陌生字于串）衔栈尾与（（语之字符于普通字符）衔输入尾）则解结构名于（（栈陌生字于（串附普通字符））衔栈尾）于输入尾
        或有（栈分隔符）衔栈尾与（（语之字符于普通字符）衔输入尾）则解结构名于（（栈陌生字于（普通字符））衔栈尾）于输入尾
        或有（栈陌生字于串）衔栈尾与（其他语衔输入尾）则发生事故于『名称中间不可出现括号』
        或有（栈分隔符）衔栈尾与（其他语衔（语之字符于『之』）衔输入尾）则解结构名于（栈分隔符衔（栈陌生字于（纯名称含括号于【其他语】））衔栈尾）于输入尾
        或有（栈分隔符）衔栈尾与（其他语衔其他衔输入尾）则发生事故于『其他语后字符不为“之”，无法理解』
        「：结束：」
            「：已到结尾则加分隔符：」
        或有（栈陌生字于串）衔全栈与【】则解结构名于（栈分隔符衔（栈陌生字于串）衔全栈）于【】
            「：已到结尾则加分隔符：」
        或有栈分隔符衔全栈与【】则反转于（态射于（会素而
            鉴素而
                有栈陌生字于串则串
                或有其他则发生事故于『抽42：栈上应该只存在陌生字』
            ）于全栈）
        或有其他则（发生事故于『抽44』）
        也。
            


根据声明更新环境乃化「符列环境」而化抽象语法之声明而「符列环境」也。
根据声明更新环境者会「环境」而会句而
    虑「
        观抽象语法之书。

        需要导入乃化结构名称操作而爻也。
        需要导入者会作而
            鉴作而
                有结构寻则阳
                或有结构寻观则阳
                或有结构寻观诵则阳
                或有结构寻诵则阳
                或有「其他」则阴也。

        添加操作符乃化「符列环境」而化字符串而「符列环境」也。
        添加操作符者会境而会名而「：TODO 开放操作符：」
            「符列环境更新操作符集」于境于（「插入闭合操作符」于（
                构造操作符于（【字符串组件于名】）于（行于下个序数）于（
                    会式列而自由变量于名
                ）
            ））也。

        结果乃「符列环境」也。
        结果者鉴句而
            有文件操作于作于名则（
                虑「
                    下1者若需要导入于作则
                        （虑「
                            新文件名者导入解析之解析导入文件名于（「符列环境读取路径」于「环境」）于名也。
                            （读引用于「函数合集」之进行编译引用）于新文件名。
                            抽象语法信息者（读引用于「函数合集」之读取编译信息引用）于新文件名于信息名抽象语法也。
                            抽象语法者信息读取抽象语法于抽象语法信息也。
                            新环境者「符列环境添加条目」于（外部结构于（名）于抽象语法）于环境也。
                        」以成新环境之道）
                        否则环境也。
                    结果者下1也。
                」以成结果之道
            ）
            或有构造声明于名于类则（
                虑（ 
                 结果者「添加操作符」于「环境」于名也。
                ）以成结果之道
            ） 「：TODO！其他事情：」
            或有类型声明于名于类则（
                虑（ 
                 结果者「添加操作符」于「环境」于名也。
                ）以成结果之道
            ） 「：TODO！其他事情：」
            或有其他则环境 「：TODO！其他事情：」
            或有其他则发生事故于『抽83』也。
    」以成结果之道也。



抽象语法解析声明乃化「符列环境」而化粗语法之粗声明而「符列环境」合抽象语法之声明也。
抽象语法解析声明者
        会符列而会粗声明而
        （
            虑「
                    「： 打印行于（『72正在解析声明：』 附（粗语法表示之表示于声明））； ：」
                声明者（鉴粗声明而
                    有粗语法之粗文件操作于作于名则抽象语法之文件操作于作于（解结构名于【】于名）
                    或有粗语法之粗构造声明于名于型则抽象语法之构造声明于（纯名称含括号于名）于（解表达式于「符列」于型）
                    或有粗语法之粗类型声明于名于型则抽象语法之类型声明于（纯名称含括号于名）于（解表达式于「符列」于型）
                    或有粗语法之粗定义声明于名于式则抽象语法之定义声明于（解表达式于「符列」于名）于（解表达式于「符列」于式）
                    或有粗语法之「粗直接表达式」于式则抽象语法之「直接表达式」于（解表达式于「符列」于式）
                    或有其他则（抽象语法之声明也发生事故于『抽51』）
                ）也。

                新环境者根据声明更新环境于「符列」于声明也。
            」以成（新环境与声明）之道
        ）也。
        



抽象语法解析编译单元乃化「符列环境」而化粗语法之粗声明列而抽象语法之声明列也。
抽象语法解析编译单元者会符列而会甲而
    （从左态射折叠于（会粗声明而会环境而
        虑「环声者抽象语法解析声明于环境于粗声明也。」
        以成（环声中一与环声中零）之道
    ）于「符列」于甲）中零也。

写引用于（「函数合集」之抽象语法解析编译单元引用）于抽象语法解析编译单元。

抽象语法解析编译单元顶层乃化字符串而化粗语法之粗声明列而抽象语法之声明列也。
抽象语法解析编译单元顶层者会当前文件名而会甲而
    抽象语法解析编译单元于（「默认操作符」与（【】与当前文件名））于甲也。