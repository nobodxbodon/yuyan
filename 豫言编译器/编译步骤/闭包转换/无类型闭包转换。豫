「：This is untyped closure conversion. 
I have prepared groundwork for typed closure conversion, but I 
have not yet studied it.
Part of the reason is that type annotation and typed ANF conversion take 
too long to execute.
：」



寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树方法之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树相等方法之书。
寻观豫言编译器之编译数据之抽象绑定树结构之模块操作之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。

观抽象语法之书。
观抽象语法表示之书。


寻观豫言编译器之编译数据之操作符之操作符数据结构之书。
寻观豫言编译器之编译步骤之语法分析之函数合集之书。
寻观豫言编译器之编译步骤之类型检查之元变量管理之书。
寻观豫言编译器之编译步骤之类型检查之顶部归一化之书。
寻观拓展库之顺序标识符之顺序标识符之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之文件管理之编译文件信息之书。
寻观豫言编译器之编译数据之抽象绑定树结构之静态单例类型处理之书。
寻观豫言编译器之编译步骤之求值正则变换之正则形式统一变换之书。


闭包自由变量提取乃化表达式而表达式「：三抽象象节点：」合表达式「：闭包变量节点：」也。
闭包自由变量提取者会参而
    虑无者详细调试打印行于（会无而『获取闭包包自由变量中：』附（表达式表示于参））而
    虑自由变量们者「移除重复」于「串相等」于（「读取式自由变量」于参）而
    虑闭包变量名者（下个字符序数于『闭包V』）而
    虑替换后参者抽象表达式操作于参于（会内式而抽象表达式操作于内式于（会抽象下参而（从左折叠于（会序数而会已有式而
        式节点于「内联虑」于【
            （式节点于（元组解构节点于序数）于【自由变量于闭包变量名】），
            进行抽象于（第N个于序数于自由变量们）于已有式
        】
    ）于抽象下参于（整数范围于零于（长度于（自由变量们））））））而
    虑后参者（进行抽象于闭包变量名于替换后参）而
    虑闭包构造式者式节点于元组构造节点于（态射于自由变量于自由变量们）而
                        后参与闭包构造式也。


闭包转换乃化表达式而表达式也。
闭包转换者循「闭包转换」以会式而
    虑无者详细调试打印行于（会无而『闭包转换中：』附（表达式表示于式））而
    虑绑定递归者（化表达式而表达式也会式而抽象表达式操作于式于闭包转换）而
    鉴式而
        有（自由变量于名）则
            （自由变量于名）
        或有式节点于「内联虑」于「实现」衔「下个」衔【】则
            （
                鉴实现而
                有（式节点于（拉姆达抽象两参数）于参衔【】）则
                （
                    虑后参及闭包构造式者闭包自由变量提取于（抽象表达式操作于参于（会内式而绑定递归于内式））而
                    式节点于「内联虑」于【式节点于拉姆达抽象三参数于【后参及闭包构造式中零】，
                        构造抽象于『函数』于（会函数名而
                            式节点于「内联虑」于【后参及闭包构造式中一，
                                构造抽象于『闭包』于（会闭包而
                                    式节点于「内联虑」于
                                        【式节点于（元组构造节点）于（（自由变量于函数名）衔（自由变量于闭包）衔【】）
                                        ，绑定递归于下个】
                                ）
                            】
                    ）】
                ）
                或有（式节点于（函数调用两参数）于「函数」衔「参数一」衔「参数二」衔【】）则
                    式节点于「内联虑」于【式节点于（元组解构节点于零）于【函数】，
                        构造抽象于『函数』于（会函数名而
                            式节点于「内联虑」于【式节点于（元组解构节点于一）于【函数】，
                                构造抽象于『闭包』于（会闭包而
                                    式节点于「内联虑」于
                                        【式节点于（函数调用三参数）于（（自由变量于函数名）衔（自由变量于闭包）衔「参数一」衔「参数二」衔【】）
                                        ，绑定递归于下个】
                                ）
                            】
                    ）】
                或有「其他」则
                    「正则形式统一变换」于「闭包转换」于式
            ）
        或有「其他」则
                    「正则形式统一变换」于「闭包转换」于式
        也。


无类型闭包转换顶层乃化表达式而表达式也。
无类型闭包转换顶层者会式而
    虑结果者「闭包转换」于式而
    虑无者
        （若（读引用于执行自我完整性检查）
        则（
            虑结果自由变量者读取式自由变量于结果而
            虑无者（若（长度于结果自由变量）大于零 则发生事故于『闭包中出现了不应该出现的自由变量，请检查前序操作：』
                    附（以『，』合并（结果自由变量））否则元）而
                元）
        否则元）而
    结果
也。