「：用于优化中生成的有固定结构的非正则式的正则变换：」
寻观标准库之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之静态单例类型处理之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树方法之书。
观抽象语法之书。
观抽象语法表示之书。

寻观无类型正则变换之书。

「：CPS变换：」
「：续延传递主要把函数调用变成续延形式：」

简单返回乃化表达式「：当前简单式：」
        而表达式也。
简单返回者会式而
    「简单内联虑变换」于式于（会名而自由变量于名）也。



续延传递变换乃化字符串而
            化表达式而表达式也。
续延传递变换者循续延传递变换以会续延函数名而会式而
    虑「

        创建续延合并点乃
                    化字符串而「：合并点后续延名：」
                    化表达式「：继续，合并点后操作，绑定：」而
            化（化字符串而表达式）「：后续，合并点前操作：」而表达式也。
        创建续延合并点者会后续延名而会新拉参而会后续而
            （
            虑返回式者（式节点于（拉姆达抽象两参数）于【
                抽象表达式操作于新拉参于（会新拉体而
                    构造抽象于『函数续延返回』于（会函数续延返回名而
                        续延传递变换于函数续延返回名于新拉体
                    ）
                ）
            】）而
            式节点于「内联虑」于【返回式，构造抽象于『续延合并点』于（会续延合并点名而
                    后续于「续延合并点名」
                ）】
            ）也。
    
    表达式也
    虑递归者续延传递变换于续延函数名而
    虑绑定递归者（化表达式而表达式也
                会式而「抽象表达式操作」于式于（续延传递变换于续延函数名））而
    鉴式而
        有（自由变量于名）则
            式节点于「内联虑」于【式节点于空值节点于【】， 
            构造抽象于『空节点名』于（会空节点名而
                简单返回于（式节点于（函数调用两参数）于【自由变量于续延函数名，（自由变量于名），自由变量于空节点名】）
            ）】
        或有式节点于「内联虑」于「实现」衔「下个」衔【】则
            （
                （鉴实现而
                    有（式节点于（拉姆达抽象于「拉形」）于「拉体」衔【】）则
                        （
                            式节点于（拉姆达抽象两参数）于【
                            抽象表达式操作于「拉体」于（会拉体式而
                                构造抽象于『续延传递函数续延』于（会新续延名而
                                    续延传递变换于新续延名于拉体式
                                ）
                            ）】
                        ）
                        或有（式节点于（函数调用于「函形」）于「函数」衔「参数」衔【】）则
                        （
                            「创建续延合并点」于续延函数名于「下个」于
                                （会续延函数名而
                                    简单返回于（式节点于（函数调用两参数）于【函数，参数，自由变量于「续延函数名」】）
                                ）
                        ）
                        「：我们会把递归内联虑编译成一个函数，这个函数期待自身作为参数被调用：」
                        或有（式节点于递归变量节点于「自变式」衔【】）则
                        （
                            虑自变名者读取自由变量变量名于「自变式」而
                            「创建续延合并点」于续延函数名于「下个」于
                                （会续延函数名而
                                    简单返回于（式节点于（函数调用两参数）于【自由变量于「自变名」，自由变量于「自变名」，自由变量于「续延函数名」】）
                                ）
                        ）
                    或有「其他」则
                        （
                            （式节点于「内联虑」于（实现）衔（绑定递归于「下个」）衔【】）
                        ））
            ）
        或有（式节点于「递归内联虑无类型」于「定义式」衔「下个」衔【】）则
        （
            「：会把递归转换成一个函数，参数是自身：」
            「创建续延合并点」于续延函数名于「下个」于
                （会下个续延名而
                    式节点于「内联虑」于【
                        式节点于（拉姆达抽象两参数）于【
                            抽象表达式操作于「定义式」于（会定义式体而
                                构造抽象于『续延传递函数续延』于（会新续延名而
                                    续延传递变换于新续延名于定义式体
                                ）
                            ）】，
                        构造抽象于『递归函数名』于（会递归函数名而
                            简单返回于（式节点于（函数调用两参数）于【自由变量于递归函数名，自由变量于递归函数名，自由变量于下个续延名】）
                        ）
                        】
                ）
        ）
        或有（式节点于（爻分支节点）于「爻式」衔「阳式」衔「阴式」衔【】）则
            （式节点于（爻分支节点）于（爻式）衔（递归于阳式）衔（递归于阴式）衔【】）
        或有（式节点于模式匹配于「分析式」衔「分支们」）则
            （式节点于模式匹配于（分析式）衔（态射于（递归）于分支们））
        或有（式节点于（常量模式匹配分支）于「常量」衔「结果」衔【】）则
            （式节点于（常量模式匹配分支）于常量衔（「递归」于结果）衔【】）
        或有（式节点于（变量模式匹配分支）于「结果」衔【】）则
            （式节点于（变量模式匹配分支）于（绑定递归于结果）衔【】）
        或有（式节点于（唯一构造器模式匹配分支于「序数」）于「结果」衔【】）则
            （式节点于（唯一构造器模式匹配分支于序数）于（绑定递归于结果）衔【】）
        或有（式节点于（续延调用节点）于「续参」衔【】）则（
            递归于（式替换于（自由变量于续延函数名）于续参）
        ）
        或有「其他」则发生事故于『续延传递变换，不期待的正则表达式结尾：』附（表达式表示于式）
    」也。


单个文件续延传递变换顶层乃化字符串「：最终存储的全局变量名：」而化表达式而表达式也。
单个文件续延传递变换顶层者会全局名而会式而
    式节点于「内联虑」于「：续延都是两个参数，第一个是待接收的返回，第二个是会被忽略的原先续延，调用者第二个参数可以传null，或者传任意续延(callcc中，我们可能会接收原先续延，因为调用者并不知道调用的函数是不是续延)：」
        【式节点于「拉姆达抽象两参数」于
            【构造抽象于『顶部返回值』于（会顶部返回值而
                    构造抽象于『忽略继续续延值』于（会继续续延值而
                        简单返回于（式节点于（全局变量存储节点于全局名）于【自由变量于顶部返回值】）
                    ）
                ）】
        ，构造抽象于『顶部续延』于（会顶部续延而
            续延传递变换于顶部续延于式
        ）
        】也。
            

整体续延传递变换顶层乃化表达式而表达式也。
整体续延传递变换顶层者会式而
    式节点于「内联虑」于「：续延都是两个参数，第一个是待接收的返回，第二个是会被忽略的原先续延，调用者第二个参数可以传null，或者传任意续延(callcc中，我们可能会接收原先续延，因为调用者并不知道调用的函数是不是续延)：」
        【式节点于「拉姆达抽象两参数」于
            【构造抽象于『顶部返回值』于（会顶部返回值而
                    构造抽象于『忽略继续续延值』于（会继续续延值而
                        简单返回于（式节点于（空值节点）于【】）
                    ）
                ）】
        ，构造抽象于『顶部续延』于（会顶部续延而
            续延传递变换于顶部续延于式
        ）
        】也。