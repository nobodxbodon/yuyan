
「：Implements Abel and Pientka, Higher-Order Constraint Based Pattern Unification：」

寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树方法之书。
观抽象语法之书。
观抽象语法表示之书。
寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树相等方法之书。

寻观顶部归一化之书。
寻观元变量管理之书。
寻观豫言编译器之编译数据之操作符之操作符数据结构之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。



合一约束立元类型也。
    对象合一约束立化命名环境而化表达式「：左项：」而化表达式「：右项：」而化表达式「：类型：」而「合一约束」也。
    类型合一约束立化命名环境而化表达式「：左项：」而化表达式「：右项：」而「合一约束」也。

当前待合一合集乃引用类于（「合一约束」）列也。
当前待合一合集者新引用于【】也。

当前延迟合集乃引用类于（「合一约束」）列也。
当前延迟合集者新引用于【】也。

添加新问题乃化「合一约束」而有也。
添加新问题者会问题而
    写引用于「当前待合一合集」于（（读引用于「当前待合一合集」）接【问题】）也。

约束顶部归一化乃化「合一约束」而「合一约束」也。
约束顶部归一化者会约束而
    鉴约束而
        有「对象合一约束」于境于「左式」于「右式」于「式类型」则
          （「对象合一约束」于境于（进行对象顶部归一化于境于左式）于（进行对象顶部归一化于境于右式）于式类型）
        或有「类型合一约束」于境于「左式」于「右式」则
          （「类型合一约束」于境于（进行类型顶部归一化于境于左式）于（进行类型顶部归一化于境于右式））
        也。
约束表示乃化「合一约束」而字符串也。
约束表示者会约束而
    鉴约束而
        有「对象合一约束」于境于「左式」于「右式」于「式类型」则
                （表达式表示于左式）附『 = 』附（表达式表示于右式）附『 <= 』附（表达式表示于式类型）
        或有「类型合一约束」于境于「左式」于「右式」则
                （表达式表示于左式）附『 = 』附（表达式表示于右式）附『 (as sig) 』
        也。
 
构造对象合一约束乃化表达式而化命名环境而化表达式而化表达式而「合一约束」也。
构造对象合一约束者会类型而会境而会左而会右而
    「对象合一约束」于境于左于右于类型也。


「：给定 X, x.Y, Z, z.W 判断 [X, x.Y] = [Z, z.W]：」
式及绑定式合一乃化命名环境而化表达式而化表达式而化表达式而化表达式而
            化（化命名环境而化表达式而化表达式而「合一约束」）而有也。
式及绑定式合一者会境而会左定义域而会左值域而会右定义域而会右值域而会值域约束构造函数而
    （「添加新问题」于（「类型合一约束」于境于左定义域于右定义域）；
                        （虑绑定名者（获取可能绑定名于左值域）而
                        虑新绑定名及新境者（「添加声明」于境于绑定名于（内建元类型式）「：TODO：为什么式元类型式？：」）而
                        虑新绑定名者新绑定名及新境中零而
                        虑新境者新绑定名及新境中一而
                        「添加新问题」于（「值域约束构造函数」于（新境）
                            于（式替换于（自由变量于新绑定名）于左值域）
                            于（式替换于（自由变量于新绑定名）于右值域）
                            ）
                        ）
                    ）也。

式及绑定式合一类型乃化命名环境而化表达式而化表达式而化表达式而化表达式而有也。
式及绑定式合一类型者会境而会左定义域而会左值域而会右定义域而会右值域而
                「式及绑定式合一」于境于左定义域于左值域于右定义域于右值域于「类型合一约束」也。
式及绑定式合一对象乃化命名环境而化表达式而化表达式而化表达式而化表达式而化表达式而有也。
式及绑定式合一对象者会境而会左定义域而会左值域而会右定义域而会右值域而会值域类而
                「式及绑定式合一」于境于左定义域于左值域于右定义域于右值域于（「构造对象合一约束」于值域类）也。

「：如果要延迟剪枝（不是失败），则抛出此异常：」
延迟异常串者『剪枝延迟异常』也。「：TODO：使用正常的EXCEPTION，当前EXCEPTION有bug：」

进行剪枝元变量参乃化字符串列「：左式元变量的参数：」而
        化表达式列「：右式原变量参数：」而
        化命名环境「：右变量环境：」
        而命名环境「：检查后的式子，可解析传入的原变量：」也。
进行剪枝元变量参者会左参而会右参而会右境而
    若（长度于右参）不等于（长度于右境）则发生事故于『参境必须相等』
    否则（「：命名环境式反着的：」
        从右折叠于（会右式及当前条目而会后境而
            鉴（（表达式合条目）也右式及当前条目）而有
                （右式与（本地条目于名于类））则
                    （若（非于（是子集于「串相等」于（读取式自由硬性变量于右式）于左参））
                    则后境
                    否则（
                            若（（是子集于「串相等」于（读取式自由变量于右式）于左参））
                            则（若（是子集于「串相等」于（读取式自由变量于类）于（命名环境获取所有名称于后境））
                                则（（本地条目于名于类）衔后境）
                                否则（发生事故于『无法进行剪枝：多余变量(FV(A) - Ψ₂)：』附（以『，』合并（「列减」于「字符串相等」于（读取式自由变量于类）于（命名环境获取所有名称于后境）））
                                        附『「：换行：」     在剪枝于右式元变量参数时(M)：』附（表达式表示于右式）
                                        附『「：换行：」     剪枝后境中所有可能名称(Ψ₂)：』附（以『，』合并（命名环境获取所有名称于后境））
                                        附『「：换行：」     右式元变量参数中所有自由变量(FV(A))：』附（以『，』合并（移除重复于「字符串相等」于（读取式自由变量于类）））
                                        附『「：换行：」     右式元变量参数中所有自由变量不是剪枝后境中所有可能名称的子集 FV(A) ⊈ Ψ₂ 』
                                        附『「：换行：」     当前右式类型(A)：』附（表达式表示于类） 
                                        ）
                            ）
                            否则（
                                发生事故于（延迟异常串）
                                ）「：delay subst if flexible arguments to unif variable are not present on the left hand side：」
                    ））
        ）于【】于（「拉链合并」于右参于右境）
    ）也。





进行剪枝和替换乃化整数「：左式元变量编号：」而化字符串列「：元变量的参数，（其实并不是，而是允许rigid occurrence的所有变量（考虑存在绑定））：」而
    化命名环境「：左变量的定义环境：」而
    化表达式「：待检查的式子：」而表达式「：检查后的式子，可解析传入的原变量：」也。
进行剪枝和替换者循进行剪枝和替换以（会左号而会左参而会左境而会右式而
    虑递归者（进行剪枝和替换于左号于左参于左境）而
    虑剪枝替换绑定式者遇表达式者后定义域而遇表达式者值域而
        （虑绑定名及真值域者解构抽象不重复名称于值域于（左参接（命名环境获取所有名称于左境））而
                  虑绑定名者绑定名及真值域中零而
                  虑后值域者「进行剪枝和替换」于左号于（绑定名衔左参）于（本地条目于绑定名于后定义域）衔左境于（绑定名及真值域中一）而
                   （进行抽象于绑定名于后值域））
        而
    虑剪枝替换式及绑定式者遇表达式者定义域而遇表达式者值域而
        （虑后定义域者递归于定义域而
                   （后定义域）衔（剪枝替换绑定式于后定义域于值域）衔【】）
        而
    尝试运行于（会无而
        鉴右式而
            有（自由变量于「右名」）则（
                    鉴（滤态射二于（会左名而会左条目而
                                若「串相等」于左名于右名
                                则（可有左条目）
                                否则（可无））于左参于左境）而
                    有【】则（发生事故于『剪枝失败，右式变量rigidly occurs：』附右名）
                    或有（（本地条目于「匹配名」于「本类」））衔【】则（自由变量于匹配名）
                    或有其他则（发生事故于『无法进行反替换，左参中右多个可能的值』）
            ）
            或有（式节点于（元变量于「右号」）于「右参」）则
                若（左号等于右号）则发生事故于『错误！合一发生检查（Occurs Check Failure）』
                否则
                    （鉴归一元变量式于右式而
                        有（可有「新式」）则（递归于新式）
                        或有（可无）则
                            （鉴读取元变量于右号而
                                有对象变量数据于（（右原境与右类）与（可无））则
                                （
                                    虑右新境者进行剪枝元变量参于左参于右参于右原境而
                                    （若（长度于右新境）等于（长度于右原境）
                                    则（式节点于（元变量于（右号））于（态射于递归于右参））「：仍然爻：」
                                    否则（
                                        若（是子集于「串相等」于（读取式自由变量于右类）于（命名环境获取所有名称于右新境））
                                        则（
                                            虑新元变量式者新建对象元变量式于右新境于右类而
                                            虑无者解析元变量于右号于新元变量式而「：右新境式右原境的subset，所以没有问题：」
                                            递归于新元变量式
                                        ）
                                        否则（发生事故于『元变量剪枝出现问题！』）
                                    ））
                                ）
                                或有类型变量数据于（（右原境）与（可无））则
                                （「：警告：从上面拷贝的，TODO不要拷贝！：」
                                    虑右新境者进行剪枝元变量参于左参于右参于右原境而
                                    （若（长度于右新境）等于（长度于右原境）
                                    则（式节点于（元变量于（右号））于（态射于递归于右参））「：仍然爻：」
                                    否则（
                                            虑新元变量式者新建类型元变量式于右新境而
                                            虑无者解析元变量于右号于新元变量式而「：右新境式右原境的subset，所以没有问题：」
                                            递归于新元变量式
                                        ）
                                    ）
                                ）
                                或有模式匹配变量数据于（（右类）与（可无））则
                                （
                                   （式节点于（元变量于（右号））于（态射于递归于右参）） 
                                ）
                                或有其他则发生事故于『应当没有解析』
                            ）
                    ）
            或有（式节点于（内建节点于（量甲））于【】）则右式
            或有（式节点于（静态单例类型节点）于类衔式衔【】）则
                    （式节点于（静态单例类型节点）于（递归于类）衔（递归于式）衔【】） 
            或有（式节点于（签名类型节点）于【】）则
                    （式节点于（签名类型节点）于【】）
            或有（式节点于（单类型签名节点）于式衔【】）则
                    （式节点于（单类型签名节点）于（递归于式）衔【】） 
            或有（式节点于（签名对象节点）于式衔【】）则
                    （式节点于（签名对象节点）于（递归于式）衔【】） 
            或有（式节点于（派抽象于「派形」）于「定义域」衔「值域」衔【】）则
                    （式节点于（派抽象于派形）于（剪枝替换式及绑定式于定义域于值域））
            或有（式节点于（拉姆达抽象带类型于「拉形」）于「定义域」衔「值域」衔【】）则
                    （式节点于（拉姆达抽象带类型于拉形）于（剪枝替换式及绑定式于定义域于值域））
            或有（式节点于（递归节点）于「定义域」衔「值域」衔【】）则
                    （式节点于（递归节点）于（剪枝替换式及绑定式于定义域于值域））
            或有（式节点于（结构节点于「可能名」）于「定义域」衔「值域」衔【】）则
                    （式节点于（结构节点于可能名）于（剪枝替换式及绑定式于定义域于值域）） 
            或有（式节点于（空结构节点）于【】）则
                    （式节点于（空结构节点）于（【】））
            或有（式节点于（签名节点于「可能名」）于「定义域」衔「值域」衔【】）则
                    （式节点于（签名节点于可能名）于（剪枝替换式及绑定式于定义域于值域））
            或有（式节点于（正则签名节点于「投影名」）于「定义域」衔 「值域」衔【】）则
                    （式节点于（正则签名节点于「投影名」）于（递归于「定义域」）衔（递归于「值域」）衔【】）
            或有（式节点于（空签名节点）于【】）则
                    （式节点于（空签名节点）于（【】））
            或有（式节点于（函数调用于「函形」）于「函数」衔「参数」衔【】）则
                    （式节点于（函数调用于函形）于（递归于函数）衔（递归于参数）衔（【】））
            或有（式节点于（结构投影带序数于名于「序数」）于「参数」衔【】）则
                    （式节点于（结构投影带序数于名于序数）于（递归于参数）衔（【】））
            或有（式节点于（文件引用节点于「文件名」）于【】）则「：感觉不对：」
                    （式节点于（文件引用节点于文件名）于【】）
            或有（式节点于（对子类型节点）于「对左类」衔「对右类」衔【】）则
                    （式节点于（对子类型节点）于（递归于对左类）衔（递归于对右类）衔【】）
            或有（式节点于（对子类型结尾节点）于【】）则
                    （式节点于（对子类型结尾节点）于【】）
            或有（式节点于（对子构造节点）于「对左」衔「对右」衔【】）则
                    （式节点于（对子构造节点）于（递归于对左）衔（递归于对右）衔【】）
            或有（式节点于（对子构造结尾节点）于【】）则
                    （式节点于（对子构造结尾节点）于【】）
            或有（式节点于（对子解构节点）于「对子」衔「序数式」衔【】）则
                    （式节点于（对子解构节点）于（递归于对子）衔（递归于序数式）衔【】）
            或有（式节点于（签名实现节点）于「签名」衔「实现」衔【】）则
                （式节点于（签名实现节点）于（递归于「签名」）衔（递归于「实现」）衔【】）
            或有（式节点于（模式匹配）于「分析式」衔「分支们」）则
                （式节点于（模式匹配）于（递归于「分析式」）衔（态射于递归于「分支们」））
            或有（式节点于（模式匹配分支）于「模式」衔「结果」衔【】）则
                （式节点于（模式匹配分支）于（递归于「模式」）衔
                    （
                        虑新变量们者读取模式匹配新变量于模式而
                       「进行剪枝和替换」于左号于（新变量们接左参）于（（态射于（会变名而本地条目于变名于（式节点于「待定节点」于【】））于新变量们）接左境）于结果
                    ）
                    衔【】）
            或有（式节点于（模式匹配新变量于「变名」）于「变类」衔【】）则
                    （式节点于（模式匹配新变量于变名）于（「：不检查模式的自由变量的类型，因为可能含有模式先前的新变量：」变类）衔【】）
            或有（式节点于（顺序执行节点）于「式一」衔「式二」衔【】）则
                （式节点于（顺序执行节点）于（递归于「式一」）衔（递归于「式二」）衔【】）
            或有（式节点于（解析后外部调用节点带类型于「调用名」）于参）则
                （式节点于（解析后外部调用节点带类型于「调用名」）于（态射于递归于参））
            或有（式节点于「内联虑带类型」于「当前类」衔「当前式」衔「下式」衔【】）则
                （虑后当前类者（递归于「当前类」）而
                    式节点于「内联虑带类型」于（后当前类）衔（递归于「当前式」）衔（剪枝替换绑定式于后当前类于下式）衔【】）
            或有（式节点于（唯一构造器节点于数）于「构造器类」衔【】）则
                    （式节点于（唯一构造器节点于数）于（递归于构造器类）衔【】）
            或有（式节点于（签名类型类型占位节点）于【】）则
                    （式节点于（签名类型类型占位节点）于【】）
            或有（式节点于（整数节点于数）于【】）则
                    （ （式节点于（整数节点于数）于【】） ）
            或有（式节点于（「小数节点」于数于「整小部」）于【】）则
                    （ （式节点于（「小数节点」于数于「整小部」）于【】） ）
            或有（式节点于（字符串节点于串）于【】）则
                    （ （式节点于（字符串节点于串）于【】） ）
            或有（式节点于（爻分支节点）于「爻式」衔「阳式」衔「阴式」衔【】）则
                （式节点于（爻分支节点）于（递归于爻式）衔（递归于阳式）衔（递归于阴式）衔【】）
            或有「其他」则发生事故于『剪枝替换未有：』附（表达式表示于右式）附（命名环境表示于左境）
        ）
        于（会事故而
                        若（「串相等」于事故于（延迟异常串））「：TODO 使用正常的Exceptions：」
                        则（ 发生事故于事故）
                        否则（发生事故于事故附『「：换行：」===》》》》在试图进行剪枝时：』附（表达式表示于右式）
                                附『「：换行：」左号：』附（整数表示于左号）
                                附『「：换行：」左参：』附（以『，』合并（左参））
                                附『「：换行：」左境：』附（以『，』合并（命名环境获取所有名称于左境））
                                ）
                ））
        也。

「：进行优化的剪枝：」
「：TODO：检查是否可以优化：」
进行剪枝和替换顶层乃化整数「：左式元变量编号：」而化字符串列「：元变量的参数，（其实并不是，而是允许rigid occurrence的所有变量（考虑存在绑定））：」而
    化命名环境「：左变量的定义环境：」而
    化表达式「：待检查的式子：」而表达式「：检查后的式子，可解析传入的原变量：」也。
进行剪枝和替换顶层者（会左号而会左参而会左境而会右式而
    若（是子集于「串相等」于左参于（读取式自由变量于右式））且（非于（是子集于「整数相等」于【左号】于（读取自由元变量于右式）））
    则（右式）
    否则（进行剪枝和替换于左号于左参于左境于右式））也。

处理左元变量方程乃化表达式而化表达式而有也。
处理左元变量方程者会左式而会右式而
    鉴（左式与右式）而
        有（式节点于（元变量于「量甲」）于「参甲」）与「右式二」则
            （鉴右式而
                有（式节点于（元变量于「量乙」）于「参乙」）则
                    （若量甲等于量乙
                        则（
                            若（元变量是模式匹配元变量于量甲）
                            则（
                                元
                            ）
                            否则（
                                若（「全部符合」于「是自由变量」于参乙）且（「全部符合」于是自由变量于参甲）
                                则（
                                    若（「全部符合二」于（表达式相等）于参甲于参乙）
                                    则元否则（
                                        虑「
                                            有也
                                            发生事故于『未有34』。
                                            元
                                        」
                                    ）
                                ）
                                否则（
                                    发生事故于延迟异常串 
                                ）
                            ）
                        ）
                        否则（
                            若（元变量是模式匹配元变量于量甲）
                            则（
                                解析元变量于量甲于右式
                            ）
                            否则（
                                若（「全部符合」于「是自由变量」于参乙）
                                则解析元变量于量甲于（进行剪枝和替换顶层于量甲于（态射于读取自由变量于参甲）于（读取元变量环境于量甲）于右式）
                                否则（
                                    若（元变量是模式匹配元变量于量乙）
                                        则（
                                            解析元变量于量乙于左式
                                        ）
                                        否则（
                                            若（「全部符合」于是自由变量于参甲）
                                            则解析元变量于量乙于（进行剪枝和替换顶层于量乙于（态射于读取自由变量于参乙）于（读取元变量环境于量乙）于左式）
                                            否则（发生事故于延迟异常串）
                                        ）
                                ）
                            ）
                        ）
                    ）
                或有「其他」则（
                    若（元变量是模式匹配元变量于量甲）
                            则（
                                解析元变量于量甲于右式
                            ）
                            否则（
                                解析元变量于量甲于（进行剪枝和替换顶层于量甲于（态射于读取自由变量于参甲）于（读取元变量环境于量甲）于右式）
                                ）
                ）
            ）也。


结构比较乃化「命名环境」而化表达式而化表达式而化（化命名环境而化表达式而化表达式而「合一约束」）而有也。
结构比较者会境而会左式而会右式而会构造约束而
    虑抛出断言异常者（遇有者无而（发生事故于『无法合一！』附（约束表示于（构造约束于境于左式于右式））
                    附『环境：』附（命名环境表示于境）））而
    虑简单断言者（遇爻者条件而若条件则元否则（抛出断言异常于元））而
    鉴左式与右式而
        有（自由变量于「串甲」）与（自由变量于「串乙」）则
            简单断言于（「串相等」于串甲于串乙）
        或有（式节点于（内建节点于（量甲））于【】）与（式节点于（内建节点于（量乙））于【】）则
            简单断言于（「内建常量相等」于量甲于量乙）
        或有（式节点于（（函数调用于「左形」））于「左函」衔「左参」衔【】）与（式节点于（（函数调用于「右形」））于「右函」衔「右参」衔【】）则
            若（「参式相等」于左形于右形）
                则（
                    「添加新问题」于（构造约束于境于左函于右函）；
                    「添加新问题」于（构造约束于境于左参于右参）
                ）
                否则（抛出断言异常于元）
        或有（式节点于（顺序执行节点）于「左式一」衔「左式二」衔【】）
            与（式节点于（顺序执行节点）于「右式一」衔「右式二」衔【】）则
            （
                「添加新问题」于（构造约束于境于左式一于右式一）；
                「添加新问题」于（构造约束于境于左式二于右式二）
            ）
        或有（式节点于（爻分支节点）于「左分析式」衔「左式一」衔「左式二」衔【】）
            与（式节点于（爻分支节点）于「右分析式」衔「右式一」衔「右式二」衔【】）则
            （
                「添加新问题」于（构造约束于境于左分析式于右分析式）；
                「添加新问题」于（构造约束于境于左式一于右式一）；
                「添加新问题」于（构造约束于境于左式二于右式二）
            ）
        或有（式节点于（拉姆达抽象带类型于「左形」）于「左类型」衔「左函体」衔【】）
            与（式节点于（拉姆达抽象带类型于「右形」）于「右类型」衔「右函体」衔【】）则
            （
                若（「参式相等」于左形于右形）
                则（
                    「添加新问题」于（「类型合一约束」于境于左类型于右类型）；
                    （
                        虑抽象名及新境者（「添加声明」于境于（获取可能绑定名于左函体）于左类型）而
                        「添加新问题」于（构造约束于（抽象名及新境中一）于
                            （式替换于（自由变量于（抽象名及新境中零））于左函体）
                            于（（式替换于（自由变量于（抽象名及新境中零））于右函体）））
                    ）
                ）
                否则（抛出断言异常于元）
            ）
        或有「其他左式」
            与（式节点于（拉姆达抽象带类型于「右形」）于「右类型」衔「右函体」衔【】）则
            （
                「添加新问题」于（构造约束于（境）于
                    （式节点于（拉姆达抽象带类型于右形）于右类型衔
                        （构造抽象于『名』于（会名而式节点于（函数调用于右形）于左式衔（自由变量于名）衔【】））衔【】）
                    于右式
                        ）
            ）
        或有（式节点于（拉姆达抽象带类型于「左形」）于「左类型」衔「左函体」衔【】）
            与「其他右式」则
            （
                「添加新问题」于（构造约束于（境）于左式于
                    （式节点于（拉姆达抽象带类型于左形）于左类型衔
                        （构造抽象于『名』于（会名而式节点于（函数调用于左形）于右式衔（自由变量于名）衔【】））衔【】））
            ）
        或有（式节点于（对子构造节点）于「左对零」衔「左对一」衔【】）
            与（式节点于（对子构造节点）于「右对零」衔「右对一」衔【】）则
            （
               「添加新问题」于（构造约束于境于左对零于右对零）；
               「添加新问题」于（构造约束于境于左对一于右对一）
            ）
        或有（式节点于（对子解构节点）于「左对」衔「左序数式」衔【】）
            与（式节点于（对子解构节点）于「右对」衔「右序数式」衔【】）则
            （
               「添加新问题」于（构造约束于境于左对于右对）；
               「添加新问题」于（构造约束于境于左序数式于右序数式）
            ）
        或有（式节点于（对子构造结尾节点）于【】）与
                （式节点于（对子构造结尾节点）于【】）则
                （元）
        或有（式节点于（签名类型类型占位节点）于【】）
                与（式节点于（签名类型类型占位节点）于【】）则
                （元）
        或有（式节点于（文件引用节点于「左文件名」）于【】）与（式节点于（文件引用节点于「右文件名」）于【】）则
            （「：默认签名相等，因为两边默认已经经过了类型检查：」
                简单断言于（「串相等」于左文件名于右文件名）
            ）
        或有（式节点于（结构投影带序数于「左名」于「左序数」）于「左参数」衔【】）
                与（式节点于（结构投影带序数于「右名」于「右序数」）于「右参数」衔【】）则
            （
                若「串相等」于左名于右名
                则（
                    若「整数相等」于左序数于右序数
                    则（
                        「添加新问题」于（构造约束于境于左参数于右参数）
                    ）否则（
                        （抛出断言异常于元）
                    ）
                ）
                否则（抛出断言异常于元）
            ）
        或有（式节点于（递归节点）于「左定义域」衔「左值域」衔【】）与
                （式节点于（递归节点）于「右定义域」衔「右值域」衔【】）则
                （
                    「式及绑定式合一对象」于境于左定义域于左值域于右定义域于右值域于左定义域
                ）
        或有（式节点于（结构节点于「左名」）于「左当前」衔「左后」衔【】）与（式节点于（结构节点于「右名」）于「右当前」衔「右后」衔【】）则
            （
                若「可选值相等」于「串相等」于左名于右名
                则（
                    「式及绑定式合一对象」于境于左当前于左后于右当前于右后于（式节点于（待定节点）于【】）
                ）
                否则（抛出断言异常于元）
            ）
        或有（式节点于（签名实现节点）于「左签名」衔「左实现」衔【】）与（式节点于（签名实现节点）于「右签名」衔「右实现」衔【】）则
            （
                「添加新问题」于（「类型合一约束」于境于左签名于右签名）；
                「添加新问题」于（「对象合一约束」于境于左实现于右实现于左签名）
            ）
        或有（式节点于（空结构节点）于【】）与（式节点于（空结构节点）于【】）则
            （元）
        或有（式节点于（唯一构造器节点于「左数」）于「左类」衔【】）与（式节点于（唯一构造器节点于「右数」）于「右类」衔【】）则
            简单断言于（左数等于右数）
        或有（式节点于签名对象节点于「左签名」衔【】）与（式节点于签名对象节点于「右签名」衔【】）则
            （「添加新问题」于（「类型合一约束」于境于左签名于右签名））
        或有（式节点于（整数节点于「左数」）于【】）与
                     （式节点于（整数节点于「右数」）于【】）则
            简单断言于（左数等于右数）
        或有（式节点于（「小数节点」于「左数」于（「左整部」与「左小部」））于【】）与
                    （式节点于（「小数节点」于「右数」于（「右整部」与「右小部」））于【】） 则
            简单断言于（（「串相等」于左整部于右整部）且（「串相等」于「左小部」于「右小部」））
        或有（式节点于（字符串节点于「左串」）于【】）与
                    （式节点于（字符串节点于「右串」）于【】） 则
            简单断言于（「串相等」于左串于右串）
        或有其他则（抛出断言异常于元）
        也。
        

单一方程处理乃化「合一约束」而有也。
单一方程处理者会约束而
    虑无者详细调试打印行于（会无而『[D]正在合一约束：』附（约束表示于约束））而
    鉴约束而
        有「对象合一约束」于境于「左式」于「右式」于「式类型」则
            （虑进行后续处理者
                （（化有而有）也（会无而
                        鉴（左式与右式）而
                            有（式节点于（元变量于「量甲」）于「参甲」）与「右式二」则
                                处理左元变量方程于左式于右式
                            或有「其他左式」与（式节点于（元变量于「量甲」）于「参甲」）则
                                「添加新问题」于（「对象合一约束」于境于右式于左式于式类型）「：反转：」
                            或有（式节点于（（函数调用于「左形」））于「左函」衔「左参」衔【】）与（式节点于（（函数调用于「右形」））于「右函」衔「右参」衔【】）则
                                若（「参式相等」于左形于右形）
                                    则（
                                        「添加新问题」于（「对象合一约束」于境于左函于右函于（式节点于（待定节点）于【】））；
                                        「添加新问题」于（「对象合一约束」于境于左参于右参于（式节点于（待定节点）于【】））
                                    ）
                                    否则（发生事故于『无法合一！』附（约束表示于（约束））
                                        附『环境：』附（命名环境表示于境））
                                                「：结构比较：」
                                                或有其他则结构比较于境于左式于右式于（会境而会左而会右而（「对象合一约束」于境于左于右于式类型））
                            「：结构比较：」
                            或有其他则结构比较于境于左式于右式于（会境而会左而会右而（「对象合一约束」于境于左于右于式类型））
                ））
            而
                「：快速跳过相等自由变量处理，
                写这个是跳过自由变量如果是模式匹配静态单例，那么就会无限循环的bug：」
                若（（若（是自由变量于左式）且（是自由变量于右式）
                    则（「串相等」于（读取自由变量变量名于左式）于（读取自由变量变量名于右式））
                    否则「阴」））
                则（元）
                否则
                「：静态单例的类型处理，其他的处理在上面：」
                （鉴（左式）而有
                    （式节点于（元变量于量甲）于参甲）则
                            处理左元变量方程于左式于右式
                    或有（自由变量于「左名」）则
                        （鉴解析单个名称于境于左名而
                            有（可有（式节点于静态单例类型节点于类衔义衔【】））则
                                （「添加新问题」于（「对象合一约束」于境于义于右式于式类型））
                            或有（可有（式节点于（模式匹配静态单例类型节点）于类衔义衔【】））则
                                （「添加新问题」于（「对象合一约束」于境于义于右式于式类型））
                            或有「其他类」则
                                （鉴（右式）而有
                                    （自由变量于右名）则
                                        （鉴解析单个名称于境于右名而
                                            有（可有（式节点于静态单例类型节点于「右类」衔「右义」衔【】））则
                                                （「添加新问题」于（「对象合一约束」于境于左式于右义于式类型））
                                            或有（可有（式节点于（模式匹配静态单例类型节点）于「右类」衔「右义」衔【】））则
                                                （「添加新问题」于（「对象合一约束」于境于左式于右义于式类型））
                                            或有（其他右类）则
                                                 （进行后续处理于元）
                                        ）
                                    或有「其他右式」则（进行后续处理于元）
                                ）
                        ）
                    或有「其他左式」则
                        （鉴（右式）而有
                            （自由变量于右名）则
                                「添加新问题」于（「对象合一约束」于境于右式于左式于式类型）「：反转：」
                            或有（式节点于（模式匹配新变量于「右名」）于「右类」衔【】）则
                                「添加新问题」于（「对象合一约束」于境于右式于左式于式类型）「：反转：」
                            或有「其他右式」则（进行后续处理于元）
                        ）
                ）
            ）
        或有「类型合一约束」于境于「左式」于「右式」则
            （虑进行类型后续处理者
                （（化有而有）也（会无而
                        （鉴（左式与右式）而
                            「：所有类型处理：」
                            有（式节点于（元变量于「量甲」）于「参甲」）与「右式二」则
                                处理左元变量方程于左式于右式
                            或有「其他左式」与（式节点于（元变量于「量甲」）于「参甲」）则
                                    「添加新问题」于（「类型合一约束」于境于右式于左式）「：反转：」
                            或有（式节点于（派抽象于「左形」）于「左定义域」衔「左值域」衔【】）与
                                （式节点于（派抽象于「右形」）于「右定义域」衔「右值域」衔【】）则
                                    （若（「参式相等」于左形于右形）
                                        则（「式及绑定式合一类型」于境于左定义域于左值域于右定义域于右值域）
                                        否则 发生事故于『左右参式不相等』
                                    ）
                            或有（式节点于（对子类型结尾节点）于【】）与（式节点于（对子类型结尾节点）于【】）则元
                            或有（式节点于（对子类型节点）于「左对左类」衔「左对右类」衔【】）与（式节点于（对子类型节点）于「右对左类」衔「右对右类」衔【】）则
                                （
                                    「添加新问题」于（「类型合一约束」于境于左对左类于右对左类）；
                                    「添加新问题」于（「类型合一约束」于境于左对右类于右对右类） 
                                ）
                            或有（式节点于（签名节点于「左名」）于「左定义域」衔「左值域」衔【】）与
                                （式节点于（签名节点于「右名」）于「右定义域」衔「右值域」衔【】）则
                                    （若（「可选值相等」于「串相等」于左名于右名）
                                    则（「式及绑定式合一类型」于境于左定义域于左值域于右定义域于右值域）
                                    否则 发生事故于『左右名不相等』
                                    ）
                            或有（式节点于（正则签名节点于「左名」）于左定义域衔左值域衔【】）与
                                （式节点于（正则签名节点于「右名」）于右定义域衔右值域衔【】）则
                                    （若（「串相等」于左名于右名）
                                    则（
                                        「添加新问题」于（「类型合一约束」于境于左定义域于右定义域）；
                                        「添加新问题」于（「类型合一约束」于境于左值域于右值域））
                                    否则 发生事故于『左右名不相等』
                                    ）
                            或有（式节点于（空签名节点）于【】）与
                                （式节点于（空签名节点）于【】）则
                                    元
                            或有（式节点于（静态单例类型节点）于「左单例类」衔「左单例义」衔【】）与
                                （式节点于（静态单例类型节点）于「右单例类」衔「右单例义」衔【】）则
                                    （
                                        「添加新问题」于（「类型合一约束」于境于左单例类于右单例类）；
                                        「添加新问题」于（「对象合一约束」于境于左单例义于右单例义于左单例类）
                                    ）
                            或有（式节点于（单类型签名节点）于「左参」衔【】）与（式节点于（单类型签名节点）于「右参」衔【】）则
                                    （
                                        「添加新问题」于（「对象合一约束」于境于左参于右参于（内建元类型式））
                                    ）
                            或有（式节点于模式匹配静态单例类型节点于「左类型」衔「左对象」衔【】）
                                与
                                （式节点于模式匹配静态单例类型节点于「右类型」衔「右对象」衔【】）
                                则
                                （
                                    「添加新问题」于（「类型合一约束」于境于左类型于右类型）；
                                    「添加新问题」于（「对象合一约束」于境于左对象于右对象于（左类型））
                                ）
                            「：模式匹配单例是一个特殊的单例类型，以下两个case只是实验：」
                            或有（式节点于模式匹配静态单例类型节点于「左类型」衔（左对象）衔【】）
                                与「右类型」则
                                （
                                    「添加新问题」于（「类型合一约束」于境于左类型于右类型）
                                ）
                            或有「左类型」
                                与
                                （式节点于模式匹配静态单例类型节点于「右类型」衔（右对象）衔【】）
                                则
                                （
                                    「添加新问题」于（「类型合一约束」于境于左类型于右类型）
                                ）
                            或有「左签名」与（式节点于（单类型签名节点）于「右参」衔【】）则
                                    （
                                        「添加新问题」于（「对象合一约束」于境于（式节点于签名对象节点于【左签名】）于右参于（内建元类型式））
                                    ）
                            或有（式节点于（单类型签名节点）于「左参」衔【】）与「右签名」则
                                    （
                                        「添加新问题」于（「对象合一约束」于境于左参于（式节点于签名对象节点于【右签名】）于（内建元类型式））
                                    ）
                            或有其他则结构比较于境于左式于右式于（会境而会左而会右而（「类型合一约束」于境于左于右））
                        ）
                ））
            而
                「：签名单例的类型处理，其他的处理在上面：」
                （鉴（左式）而有
                    （自由变量于左名）则
                        （鉴解析单个名称于境于左名而
                            有（可有（式节点于静态单例类型节点于（式节点于（签名类型类型占位节点）于【】）衔「类型定义」衔【】））则 「：TODO 重新考虑：」
                                （「添加新问题」于（「类型合一约束」于境于类型定义于右式））
                            或有「其他类」则
                                （鉴（右式）而有
                                    （自由变量于右名）则
                                        （鉴解析单个名称于境于右名而
                                            有（可有（式节点于静态单例类型节点于（式节点于（签名类型类型占位节点）于【】）衔「类型定义」衔【】））则
                                                （「添加新问题」于（「类型合一约束」于境于左式于类型定义））
                                            或有（其他右类）则
                                                 （进行类型后续处理于元）
                                        ）
                                    或有「其他右式」则（进行类型后续处理于元）
                                ）
                        ）
                    或有「其他左式」则
                        （鉴（右式）而有
                            （自由变量于右名）则
                                「添加新问题」于（「类型合一约束」于境于右式于左式）「：反转：」
                            或有「其他右式」则（进行类型后续处理于元）
                        ）
                ）


            ）
        也。



进行合集处理乃化有而有也。
进行合集处理者循进行合集处理以会元而
    鉴（读引用于「当前待合一合集」）而
        有【】则（
            鉴（读引用于「当前延迟合集」）而
                有【】则元
                或有（延迟方程们）则
                    （若（读引用于元变量有解析引用）
                    则「：有更新，重置！：」
                    （写引用于「当前待合一合集」于「延迟方程们」；
                    写引用于元变量有解析引用于阴；
                    写引用于「当前延迟合集」于【】；
                    「进行合集处理」于元）
                    否则发生事故于『未能解析所有约束！「：换行：」』
                        附（以『；「：换行：」』合并（态射于（约束表示）于（延迟方程们））））
        ）
        或有（当前约束衔「后合集」）则
            尝试运行于（会元而

                    （写引用于「当前待合一合集」于「后合集」；
                                    单一方程处理于（约束顶部归一化于当前约束）
                            ；「进行合集处理」于元）
                ）于（会事故而
                        若（「串相等」于事故于（延迟异常串））「：TODO 使用正常的Exceptions：」
                        则（ 虑无者打印行于『约束延迟解决：』附（约束表示于当前约束）而
                            写引用于（「当前延迟合集」）于（当前约束衔（读引用于「当前延迟合集」）））
                        否则（发生事故于事故附『「：换行：」=====》》》》在试图进行合一时：』附（约束表示于当前约束）附『。即：』附（约束表示于（约束顶部归一化于当前约束）））
                ）
        也。


添加问题并进行合一乃化命名环境而化表达式而化表达式而化表达式而有也。
添加问题并进行合一者会境而会左式而会右式而会式类型而
    （「添加新问题」于（「对象合一约束」于境于左式于右式于式类型）；「进行合集处理」于元）也。

断言类型相等乃化命名环境而化表达式而化表达式而有也。
断言类型相等者会境而会左式而会右式而
    （「添加新问题」于（「类型合一约束」于境于左式于右式）；「进行合集处理」于元）也。

断言对象相等者「添加问题并进行合一」也。