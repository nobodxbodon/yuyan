
寻观标准库之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。

寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。
观抽象语法之书。
观抽象语法表示之书。
寻观整数小数解析之书。

进行去糖化乃化表达式而表达式也。
进行去糖化者循进行去糖化以会式而鉴式而
            有自由变量于串则（
                若「串相等」于串于『元变量』则
                 （内建元类型式）「：TODO：用更好的方法处理元类型式

                 因为元变量的引用同时是三个东西：
                 1. 它是一个类型，可有分类（Classify）对象
                 2. 它是一个对象，拥有一个类型（签名）
                 3. 它是一个定义，代表其他东西 （它代表内建的元类型）
                 
                 目前没有一个很好地方法可有同时处理以上三种情况，我暂时不想添加Agda的Universe Polymorphism，
                 所以暂时用这种方法绕过

                 ：」
                否则（
                    虑结果者鉴（尝试解析字符串为数字于串）而
                        有（可无）则自由变量于串
                        或有（可有（整数解析于数））则（式节点于（整数节点于数）于【】）
                        或有（可有（「小数解析」于数））则（式节点于（「小数节点」于数）于【】）
                        而
                    「： 虑无者（打印行于『去糖于』附（表达式表示于式）附『。得到：』附（表达式表示于结果））而 ：」
                    结果
                ）
            ）
            或有（式节点于（对子解构节点）于对子衔序数式衔【】）则
                （
                    鉴（进行去糖化于序数式）而
                        有（式节点于（整数节点于序数）于【】）则
                            （
                                    虑「
                                        展开解构乃化整数而表达式也。
                                        展开解构者循展开解构以会数而
                                            若（数大于零）则
                                            （「：去糖：」
                                                （式节点于（对子解构节点）于（展开解构于（数减一））衔（式节点于（整数节点于一）于【】）衔【】）
                                            ）否则（
                                                （（进行去糖化于对子））
                                            ）也。
                                        「：返回：」
                                        （式节点于（对子解构节点）于（（展开解构于序数））衔（式节点于（整数节点于零）于【】）衔【】）
                                    」
                            ）
                        或有「其他序数式」则发生事故于『（去糖）中后必须是整数』
                ）
            或有式节点于节名于「式列」则
                式节点于节名于（态射于进行去糖化于「式列」）
            或有绑定于名于体则绑定于名于（进行去糖化于体）
            或有绑定变量于数则绑定变量于数
            也。