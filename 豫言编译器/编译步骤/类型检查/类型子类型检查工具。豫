

寻观标准库之书。
寻观模式合一之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之总集之书。

。

寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。




寻观豫言编译器之编译数据之操作符之操作符数据结构之书。


类型子类型检查乃化命名环境而化表达式而化表达式而化表达式而有也。
类型子类型检查者循类型子类型检查以会境而会原物而会子类而会父类而
    虑无者（详细调试打印行于（会无而『[D]正在进行类型子类型检查，合成类型：』附（表达式表示于子类）附『，检查类型：』附（表达式表示于父类））） 而
    虑递归者（类型子类型检查于境）而「：TODO 递归的scope在pi函数时不正确：」
    鉴（子类与父类）而
        有（式节点于（模式匹配静态单例类型节点）于「名类类」衔「名类义」衔【】与
            式节点于（静态单例类型节点）于检查类类衔检查类义衔【】
                ）则
            （「断言类型相等」于境于（名类类）于检查类类；
            「断言对象相等」于境于名类义于检查类义于检查类类）
        或有（式节点于（静态单例类型节点）于「名类类」衔「名类义」衔【】与
            式节点于（静态单例类型节点）于检查类类衔检查类义衔【】
                ）则
            （「断言类型相等」于境于（子类）于父类 「：断言类型相等会判断名类义=检查类义：」
            ）
        或有（式节点于（静态单例类型节点）于「名类类」衔「名类义」衔【】与「其他类」
                ）则
            （
            （「类型子类型检查」于境于原物于名类类于（父类）
            ））
        或有（「其他名类」与
            式节点于（静态单例类型节点）于检查类类衔检查类义衔【】
                ）则
            （
                「断言类型相等」于境于（检查类类）于子类；
                「断言对象相等」于境于检查类义于原物于检查类类
            ）

        「：因为我们有Sigma类型， 所以我们可能真的需要完全的子类型检查：」
        或有（式节点于（派抽象于「左形」）于「左定义域」衔「左值域」衔【】）与
                （式节点于（派抽象于「右形」）于「右定义域」衔「右值域」衔【】）则
                    （若（「参式相等」于左形于右形）
                        则（
                            虑新名者（解构抽象不重复名称于左值域于（命名环境获取所有名称于境））中零而
                            虑无者递归于（自由变量于新名）于右定义域于左定义域而
                            虑无者递归于（式节点于（函数调用于左形）于【原物，自由变量于新名】）
                                     于（式替换于（自由变量于新名）于左值域）
                                        于（式替换于（自由变量于新名）于右值域）而
                            元
                        ）
                        否则 发生事故于『左右参式不相等』
                    ）
        或有（式节点于（对子类型结尾节点）于【】）与（式节点于（对子类型结尾节点）于【】）则元
        或有（式节点于（对子类型节点）于「左对左类」衔「左对右类」衔【】）与（式节点于（对子类型节点）于「右对左类」衔「右对右类」衔【】）则
            （
                虑无者递归于（式节点于（对子解构节点）于【原物，式节点于（整数节点于零）于【】】）
                        于左对左类
                        于右对左类而
                虑无者递归于（式节点于（对子解构节点）于【原物，式节点于（整数节点于一）于【】】）
                        于左对右类
                        于右对右类而
                元

            ）
        或有（式节点于（「签名递归节点」于「左标签」）于「左签名递归」衔【】）
            与（式节点于（「签名递归节点」于「右标签」）于「右签名递归」衔【】）则
        （
            若（「列相等」于「串相等」于「左标签」于「右标签」）则
            （
                虑新名者（解构抽象不重复名称于左签名递归于（命名环境获取所有名称于境））中零而
                虑无者递归于原物
                            于（式替换于（自由变量于新名）于「左签名递归」）
                            于（式替换于（自由变量于新名）于「右签名递归」）而
                元
            ）
            否则（
                发生事故于『左右标签不相等』
            ）
        ）
        或有（式节点于（「正则签名节点」于「左名」）于「左当前」衔「左尾式」衔【】）
            与（式节点于（「正则签名节点」于「右名」）于「右当前」衔「右尾式」衔【】）则
            （
                若（「串相等」于「左名」于「右名」）
                则（
                    虑无者递归于（式节点于（结构投影于左名）于【原物】）
                            于「左当前」
                            于「右当前」而
                    虑无者递归于（原物）
                            于「左尾式」
                            于「右尾式」而
                    元
                ）
                否则（
                    发生事故于『签名首标签不等』
                ）
            ）
        或有「其他子父」则
            （
                「断言类型相等」于境于（子类）于父类
            ）
            也。

