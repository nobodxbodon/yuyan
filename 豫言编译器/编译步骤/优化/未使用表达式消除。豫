寻观标准库之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之静态单例类型处理之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树方法之书。
观抽象语法之书。
观抽象语法表示之书。



寻观标准库之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树方法之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树相等方法之书。
寻观豫言编译器之编译数据之抽象绑定树结构之模块操作之书。
寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

寻观豫言编译器之编译数据之抽象绑定树结构之命名环境术之书。

观抽象语法之书。
观抽象语法表示之书。


寻观豫言编译器之编译数据之操作符之操作符数据结构之书。
寻观豫言编译器之编译步骤之语法分析之函数合集之书。
寻观豫言编译器之编译步骤之类型检查之元变量管理之书。
寻观豫言编译器之编译步骤之类型检查之顶部归一化之书。
寻观拓展库之顺序标识符之顺序标识符之书。

寻观豫言编译器之编译步骤之求值正则变换之重新正则变换之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之文件管理之编译文件信息之书。
寻观豫言编译器之编译数据之抽象绑定树结构之静态单例类型处理之书。
寻观优化统计信息之书。


「：检查给定的表达式是否可以被消除：」
表达式可消除乃化表达式而爻也。
表达式可消除者循表达式可消除以会式而
    虑递归者「表达式可消除」而
    鉴式而
        有（自由变量于名）则
            阳
        或有式节点于「内联虑」于「实现」衔「下个」衔【】则
            （
                若（表达式可消除）于实现
                则（表达式可消除于（解构抽象于「下个」）中一）
                否则（阴）
            ）
        或有（式节点于「递归内联虑无类型」于「定义式」衔「尾式」衔【】）则
        （
                若（表达式可消除）于（解构抽象于「定义式」）中一
                则（表达式可消除于（解构抽象于「尾式」）中一）
                否则（阴）
        ）
        或有（式节点于（正则结构结尾节点无类型）于「参数」）则
            阳
        或有（式节点于（文件引用节点于「文件名」）于【】）则
            阳
        或有（绑定于「可能串」于「底式」）则（
            虑无者打印行于『发生事故60』而
            发生事故于『不应当出现绑定』）
        或有（式节点于（结构投影带序数于「投影名」于「序数」）于「结构」衔【】）则
            「：我们假设ANF 求值正则形式：」
            阳
        或有（式节点于（函数调用于「函形」）于「函数」衔「参数」衔【】）则
            阴
        或有（式节点于递归变量节点于「自变名」衔【】）则「：TODO 调查 opt-rec-1.yuyan：」
            阳
        或有（式节点于（展开后内建节点于量）于「参数们」）则
            阳
        或有（式节点于（空结构节点）于【】）则
            阳
        或有（式节点于（爻分支节点）于「爻式」衔「阳式」衔「阴式」衔【】）则
            （若（表达式可消除于爻式）
                则（若（表达式可消除于阳式）
                    则（表达式可消除于阴式）
                    否则阴）
               否则阴）
        或有（式节点于（整数节点于数）于【】）则
            阳
        或有（式节点于（「小数节点」于数于「整小部」）于【】）则
            阳
        或有（式节点于（字符串节点于串）于【】）则
            阳
        或有（式节点于模式匹配于「分析式」衔「分支们」）则
            （「全部符合」于递归于分析式衔分支们）
        或有（式节点于（模式匹配分支）于「模式」衔「结果」衔【】）则
            （（递归于「模式」）且（递归于「结果」）） 「：其实模式不需要检查：」
        或有（式节点于（对子构造节点）于「元素一」衔「元素二」衔【】）则
            （（递归于「元素一」）且（递归于「元素二」））
        或有（式节点于（对子构造结尾节点）于【】）则
            阳
        或有（式节点于（擦除后类型节点）于【】）则
            阳
        或有（式节点于（对子解构节点）于「对子」衔「序数式」衔【】）则
            （（递归于「对子」）且（递归于「序数式」））
        或有（式节点于顺序执行节点于「式甲」衔「式乙」衔【】）则
            （（递归于「式甲」）且（递归于「式乙」））
        或有（式节点于（展开后唯一构造器节点于「序数」）于「参数们」）则
            阳
        或有（式节点于（文件引用节点于「新文件名」）于【】）则
            阳
        或有（式节点于（「签名节点」于「可能名」）于参）则
            阳
        或有（式节点于（空签名节点）于【】）则
            阳
        或有（式节点于（签名对象节点）于「签名」衔【】）则
            阳「：TODO 调查， 签名对象应该是静态的，不需要求值：」
        或有（式节点于（「解析后外部调用节点无类型」于串）于参）则
            阴
        或有（式节点于（续延调用节点）于「续参」衔【】）则（
            阴
        ）
        或有（式节点于（拉姆达抽象于「拉形」）于「拉参」衔【】）则（
            阳「：拉姆达抽象当然可以消除，只要它不被调用：」
        ）
        或有「其他」则发生事故于『未有闭包转换310：』附（表达式表示于式）
也。


未使用式消除乃化表达式而表达式也。
未使用式消除者循未使用式消除以会式而
    虑绑定递归者（化表达式而表达式也会式而抽象表达式操作于式于「未使用式消除」）而
    虑递归者「未使用式消除」而
    鉴式而
        有（自由变量于名）则
                （自由变量于名）
            或有式节点于「内联虑」于「实现」衔「下个」衔【】则
                （
                    若是自由变量于「实现」
                    则（记录优化于元；递归于（式替换于「实现」于下个））「：这个其实属于 unfolding，不过我们直接在这里做了，unfolding专门做inline：」
                    否则（
                        「：TODO 可能的优化空间：」
                        虑绑定名及下个者解构抽象于「下个」而
                        虑后下个者（递归于（绑定名及下个）中一）而
                        （若自由变量在式出现于（绑定名及下个中零）于后下个
                            则（
                                「：出现就优化实现：」
                                式节点于「内联虑」于（递归于实现）衔（进行抽象于（绑定名及下个中零）于后下个）衔【】
                            ）
                            否则（
                                「：看看能否优化：」
                                若（表达式可消除于「实现」） 
                                则（记录优化于元；后下个）
                                否则（
                                    式节点于「内联虑」于（递归于实现）衔（进行抽象于（绑定名及下个中零）于后下个）衔【】
                                ）
                            ）
                        ）
                    ）
                ）
            或有（式节点于「递归内联虑无类型」于「定义式」衔「下个」衔【】）则
            （
                若（抽象是有名的于「定义式」）
                则（
                    （式节点于「递归内联虑无类型」于（绑定递归于「定义式」）衔（绑定递归于「下个」）衔【】）
                ）否则（
                    记录优化于元；
                    递归于（
                        「内联虑重新正则变换」于（解构无绑定抽象于『未消152』于定义式）于「下个」
                        ）
                ）
            ）
            或有（式节点于（爻分支节点）于「爻式」衔「阳式」衔「阴式」衔【】）则
                （式节点于（爻分支节点）于（递归于爻式）衔（递归于阳式）衔（递归于阴式）衔【】）
            或有（式节点于模式匹配于「分析式」衔「分支们」）则
                （式节点于模式匹配于（递归于分析式）衔（态射于递归于分支们））
            或有（式节点于（模式匹配分支）于「模式」衔「结果」衔【】）则
                （式节点于（模式匹配分支）于（模式）衔（递归于结果）衔【】）
            或有（式节点于（续延调用节点）于「续参」衔【】）则（
                （式节点于（续延调用节点）于（绑定递归于续参）衔【】）
            ）
            或有（式节点于（拉姆达抽象于「拉形」）于「拉参」衔【】）则（
                （式节点于（拉姆达抽象于「拉形」）于（绑定递归于「拉参」）衔【】）
            ）
            或有（式节点于（正则结构结尾节点无类型）于「参数」）则
                式
            或有（式节点于（文件引用节点于「文件名」）于【】）则
                式
            或有（绑定于「可能串」于「底式」）则（
                虑无者打印行于『发生事故65』而
                发生事故于『不应当转换绑定』）
            或有（式节点于（结构投影带序数于「投影名」于「序数」）于「结构」衔【】）则
                式
            或有（式节点于（函数调用于「函形」）于「函数」衔「参数」衔【】）则
                式
            或有（式节点于（结构投影于串）于「前式」衔【】）则
                式
            或有（式节点于递归变量节点于「自变名」衔【】）则
                式
            或有（式节点于（展开后内建节点于量）于「参数们」）则
                式
            或有（式节点于（空结构节点）于【】）则
                式
            或有（式节点于（整数节点于数）于【】）则
                式
            或有（式节点于（「小数节点」于数于「整小部」）于【】）则
                式
            或有（式节点于（字符串节点于串）于【】）则
                式
            或有（式节点于（对子构造节点）于「元素一」衔「元素二」衔【】）则
                （式节点于（对子构造节点）于（递归于元素一）衔（递归于元素二）衔【】）
            或有（式节点于（对子构造结尾节点）于【】）则
                式
            或有（式节点于（擦除后类型节点）于【】）则
                式
            或有（式节点于（对子解构节点）于「对子」衔「序数式」衔【】）则
                式
            或有（式节点于（展开后唯一构造器节点于「序数」）于「参数们」）则
                式 
            或有（式节点于（文件引用节点于「新文件名」）于【】）则
                式
            或有（式节点于（「签名节点」于「可能名」）于参）则
                式
            或有（式节点于（空签名节点）于【】）则
                式
            或有（式节点于（签名对象节点）于「签名」衔【】）则
                式
            或有（式节点于（「解析后外部调用节点无类型」于串）于参）则
                式
            或有「其他」则发生事故于『未有未使用表达式消除：』附（表达式表示于式）也。


未使用式消除顶层乃化表达式而表达式也。
未使用式消除顶层者会式而
    「未使用式消除」于式也。