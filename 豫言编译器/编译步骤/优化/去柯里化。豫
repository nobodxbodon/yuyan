寻观标准库之书。

寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之静态单例类型处理之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树方法之书。
观抽象语法之书。
观抽象语法表示之书。
寻观豫言编译器之编译步骤之求值正则变换之无类型正则变换之书。
寻观豫言编译器之编译步骤之求值正则变换之重新正则变换之书。

寻观优化统计信息之书。
寻观优化框架之书。

取得元组变量并继续乃化字符串列「：待取得的自由变量：」而
                化整数「：下个即将取得的自由变量：」而
                化表达式「：元组所在的表达式，必须是自由变量：」而
                化表达式「：取得所有元素的后续式子：」而
                表达式也。
取得元组变量并继续者循取得元组变量并继续以会已有变量们而会当前序数而会元组而会后续式而
    若（长度于已有变量们）等于当前序数
    则后续式
    否则（
        式节点于「内联虑」于（式节点于（元组解构节点于当前序数）于【元组】）衔
            （进行抽象于（第N个于当前序数于（已有变量们））于
                （取得元组变量并继续于已有变量们于（当前序数加一）于元组于后续式））衔【】
    ）也。

拉姆达抽象去柯里化乃化字符串列「：已经积累的连续拉姆达抽象的前序参数：」而
                 化表达式「：当前拉姆达函数体：」而
                 化（化表达式而表达式）「：对于原先的函数体变换：」而
                 化表达式「：后续绑定：」而
                 或可有（表达式）「：最终的返回式，是一个大的虑，如果已经优化，则返回可无：」也。
拉姆达抽象去柯里化者循拉姆达抽象去柯里化以会已有积累而会式而会原先变换而会后续绑定而
    鉴式而
    「：f = \x. \y. M 的 求值正则（ANF）形式是 
        f = \x. (let f1 = \y. M in 
                let r1 = f1 x in 
                r1)
    ：」
        有（式节点于（拉姆达抽象于「拉形」）于「拉体」衔【】）则
            （
                虑函数参数抽象名及参后体者解构抽象于「拉体」而
                虑参后体者函数参数抽象名及参后体中一而
                虑函数参数抽象名者函数参数抽象名及参后体中零而
                虑结束去柯里者
                    （化有而（或可有表达式）也（会无而
                        若（长度于已有积累）等于零
                        则（
                            「：是一个普通的拉姆达抽象，不优化直接返回：」
                            可无
                        ）
                        否则（
                            虑所有参数者已有积累接【函数参数抽象名及参后体中零】而
                            「：收集包括本参数的所有参数，把拉体单独构建参数，返回变换后的式子：」
                            虑新函数体者（式节点于（拉姆达抽象于显式）于【（构造抽象于『新元组』于（
                                会新元组名而
                                    「：先取得所有变量，然后调用参后体：」
                                取得元组变量并继续于所有参数于零于（自由变量于新元组名）于参后体
                            ））】）而
                            （可有（式节点于「内联虑」于「新函数体」衔
                                （构造抽象于『新函数名』于（会新函数名而
                                        虑原先函数体者
                                            （进行无类型求值正则变换顶层于（原先变换于（式节点于（拉姆达抽象于显式）于【（进行抽象于（函数参数抽象名及参后体中零）于（
                                                    式节点于（函数调用于显式）于【
                                                        自由变量于新函数名，
                                                        （式节点于元组构造节点于（态射于自由变量于所有参数））】
                                                ））】）））而
                                        「内联虑重新正则变换」于「原先函数体」于（后续绑定）
                                        「： （式节点于「内联虑」于【「原先函数体」，后续绑定】） ：」
                                            
                                ））衔【】））
                        ））
                    ）而
                鉴参后体而
                    有（式节点于「内联虑」于（式节点于（拉姆达抽象于「内拉形」）于「内拉体」衔【】）衔「拉后式」衔【】）则
                        （
                            虑函数抽象名及拉后体者解构抽象于「拉后式」而
                            虑函数抽象名者函数抽象名及拉后体中零而
                            虑拉后体者「函数抽象名及拉后体」中一而
                            鉴拉后体而
                                有（自由变量于「结果名」）则
                                    （若（「串相等」于「结果名」于（函数抽象名））
                                        则（
                                            拉姆达抽象去柯里化
                                                于（已有积累接【（函数参数抽象名及参后体中零）】）
                                                于（式节点于（拉姆达抽象于「内拉形」）于「内拉体」衔【】）
                                                于（会后式而
                                                    「： 虑无者（打印行于『正在原先变换：』附（表达式表示于后式））而 ：」
                                                    原先变换于（式节点于（「拉姆达抽象」于拉形）于【进行抽象于函数参数抽象名于后式】））
                                                于（后续绑定）
                                        ）
                                        否则（
                                            结束去柯里于元
                                        ）
                                    ）
                                或有「其他」则（
                                    结束去柯里于元
                                ）
                        ）
                    「：我们要排除重复的情况，：」
                    或有（式节点于「内联虑」于（式节点于（元组构造节点）于「元参」）
                                        衔「元造后式」
                                        衔【】）则
                        （
                            若（（长度于元参）等于（（长度于已有积累）加一））
                            则（
                                鉴（解构抽象于「元造后式」）中一而
                                    有（（式节点于「内联虑」于（式节点于（函数调用节点）于（自由变量于函）衔（自由变量于参）衔【】）
                                            衔「调用后式」
                                            衔【】））则
                                        （
                                            鉴（解构抽象于「调用后式」）中一而
                                                有（自由变量于「返回名」）则
                                                    （
                                                        可无
                                                    ）
                                                或有「其他」则
                                                    （
                                                        结束去柯里于元
                                                    ）
                                        ）
                                    或有「其他」则
                                        （
                                            结束去柯里于元
                                        ）
                            ）否则（
                                结束去柯里于元
                            ）
                        ）
                    或有「其他」则
                        （
                            结束去柯里于元
                        ）
            ）
        或有「其他」则
            （
                发生事故于『去38，其他拉姆达表达式』附（表达式表示于式）
            ）
        也。



「：去柯里化将 f= \x. \y. M 转换成 f' = \(x,y).M, f = \x. \y. f (x,y)
，同时将单结构递归转换成函数递归：」
「：在随后的函数内联中f将会被内联：」
去柯里化乃化表达式而表达式也。
去柯里化者循去柯里化以会式而
    鉴式而
        有（式节点于「内联虑」于「实现」衔「下个」衔【】）则
            （
                鉴「实现」而
                    有（式节点于（拉姆达抽象于「拉形」）于「拉体」衔【】）则
                        （
                            虑后下个者抽象表达式操作于下个于「去柯里化」而
                            鉴（拉姆达抽象去柯里化于【】于实现于（会后式而后式）于后下个）而
                                有（可有「变换后式」）则（
                                        记录优化于元；变换后式
                                    ）
                                或有「可无」则（式节点于「内联虑」于【实现，后下个】）
                        ）
                    或有「其他」则
                        （不带定义优化过程于去柯里化于式）
            ）
        或有「其他」则（不带定义优化过程于去柯里化于式）也。


去柯里化顶层者去柯里化也。