寻标准库之书。
观标准库之书。
寻观拓展库之顺序标识符之顺序标识符之书。
寻观标准库之操作系统之时间之书。

寻观豫言编译器之编译数据之文件管理之编译文件管理器之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树序列化之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法友好表示之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

寻观豫言编译器之编译数据之文件管理之编译文件信息之书。
寻观豫言编译器之编译步骤之语法分析之函数合集之书。

寻观标准库之操作系统之路径之书。
寻观拓展库之癸象工具之总集之书。

观抽象语法之书。
观抽象语法表示之书。
「：记录文件*完成编译*的顺序，用于生成最后的可执行代码：」
文件编译顺序乃引用类于（字符串列）也。
文件编译顺序者新引用于【】也。

当前路径者文件系统之获取当前路径于元也。

去除路径结尾豫言拓展名乃化字符串而字符串也。
去除路径结尾豫言拓展名者会输入而
            若（『。豫』是输入的结尾）则（去除串结尾于『。豫』于输入）
            否则（若（『.yuyan』是输入的结尾）则（去除串结尾于『.yuyan』于输入）
            否则（发生事故于『路径结尾不认识：』附输入））也。

「：输入文件的绝对路径，输出应当输出的文件路径prefix：」
获取输出文件路径乃化字符串「：绝对输入路径：」而字符串也。
获取输出文件路径者会输入而
    虑「
        去除结尾后者
            去除路径结尾豫言拓展名于输入也。

        去除开头后者
            若（当前路径是「去除结尾后」的开头）
            则（去除串开头于当前路径于「去除结尾后」）
            否则「去除结尾后」也。

        （「路径合并」于（「路径合并」于当前路径于『.yybuild.nosync』）于去除开头后）
    」也。



获取输出代码文件路径乃化字符串而字符串也。
获取输出代码文件路径者会输入而
    （获取输出文件路径于输入）附『.ll』也。


读取文件签名乃化字符串而表达式也。
读取文件签名者会路径而（
    虑无者（读引用于进行编译引用）于路径而「：因为可能抽象语法是缓存的，读取抽象语法缓存不会加载依赖，我们需要手动加载依赖：」
    鉴「读取编译单元」于路径而
    有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
            「正则签名」
    或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
        （鉴「正则签名信息」而
            有（可有「正则签名式」）则「正则签名式」
            或有（可无）则（
                虑缓存文件路径者（获取输出文件路径于路径）附『.正则签名.json』而
                虑无者（粗略调试打印行于（会无而『正在从缓存加载文件签名：』附路径））而
                虑新正则签名者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                虑无者「更新编译单元」于路径于（「已从缓存加载」于抽象语法信息于（可有「新正则签名」）于「当前文件依赖」于「求值正则形式」于「代码生成信息」）而
                虑无者（详细调试打印行于（会无而『[D]已从缓存加载文件签名：』附路径附（表达式表示于「新正则签名」）））而
                新正则签名
            ）
        ）
    或有「正在编译」则发生事故于『循环引用』
    或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。

「：编译过程调用本方法，检查是不是可以使用缓存的抽象语法：」
读取文件缓存的抽象语法乃化字符串而或可有表达式也。
读取文件缓存的抽象语法者会路径而
    若读引用于「不加载缓存」则「可无」
    否则（
        虑缓存文件路径者（获取输出文件路径于路径）附『.抽象语法.json』而
        若文件系统之路径存在于缓存文件路径则
            （
                若（（文件系统之获得文件修改时间于缓存文件路径）「：缓存文件必须比原文件更晚创建：」
                    大于（文件系统之获得文件修改时间于路径）
                ）则（
                    虑无者（粗略调试打印行于（会无而『正在从缓存加载抽象语法：』附路径））而
                    虑新抽象语法者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                    虑无者（详细调试打印行于（会无而『[D]已从缓存加载抽象语法：』附路径附（表达式表示于「新抽象语法」）））而
                        可有（新抽象语法 ）
                ）
                否则「可无」
            ）否则「可无」
    ）
    也。

「：编译过程中具体的pass调用本方法，返回已经编译的抽象语法：」
读取抽象语法乃化字符串而表达式也。
读取抽象语法者会路径而（
    鉴「读取编译单元」于路径而
    有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
            「抽象语法信息」
    或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
        （鉴「抽象语法信息」而
            有（可有「抽象语法式」）则「抽象语法式」
            或有（可无）则（
                虑缓存文件路径者（获取输出文件路径于路径）附『.抽象语法.json』而
                虑无者（粗略调试打印行于（会无而『正在从缓存加载抽象语法：』附路径））而
                虑新抽象语法者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                虑无者「更新编译单元」于路径于（「已从缓存加载」于（可有「新抽象语法」）于「正则签名信息」于「当前文件依赖」于「求值正则形式」于「代码生成信息」）而
                虑无者（详细调试打印行于（会无而『[D]已从缓存加载抽象语法：』附路径附（表达式表示于「新抽象语法」）））而
                    新抽象语法
            ）
        ）
    或有「正在编译」则发生事故于『循环引用』
    或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。

读取求值正则形式乃化字符串而表达式也。
读取求值正则形式者会路径而（
    鉴「读取编译单元」于路径而
    有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
            「求值正则形式」
    或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
        （鉴「求值正则形式」而
            有（可有「正则式」）则「正则式」
            或有（可无）则（
                虑缓存文件路径者（获取输出文件路径于路径）附『.求值正则形式.json』而
                虑无者（粗略调试打印行于（会无而『正在从缓存加载求值正则形式：』附路径））而
                虑新求值正则形式者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                虑无者「更新编译单元」于路径于（「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于（可有「新求值正则形式」）于「代码生成信息」）而
                虑无者（详细调试打印行于（会无而『[D]已从缓存加载求值正则形式：』附路径附（表达式表示于「新求值正则形式」）））而
                    新求值正则形式
            ）
        ）
    或有「正在编译」则发生事故于『循环引用』
    或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。


「： 
读取代码生成信息乃化字符串而字符串合字符串也。
读取代码生成信息者会路径而（
    鉴「读取编译单元」于路径而
    有「已编译」于「抽象语法信息」于「正则签名」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
        （
            若（读引用于「使用全局编译」）
            则（
                发生事故于『全局编译不可以读取代码生成信息』
            ）否则（
                鉴代码生成信息而
                    有（可有「真代码生成信息」）则「真代码生成信息」
                    或有「可无」则（发生事故于『期待有代码生成信息』）
            ）
        ）
    或有「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「求值正则形式」于「代码生成信息」则
        （
            若（读引用于「使用全局编译」）
            则（
                发生事故于『全局编译不可以读取代码生成信息』
            ）否则（
                鉴「代码生成信息」而
                    有（可有「信息」）则「信息」
                    或有（可无）则（
                        虑缓存文件路径者（获取输出文件路径于路径）附『.代码生成信息.json』而
                        虑无者（粗略调试打印行于（会无而『正在从缓存加载代码生成信息：』附路径））而
                        鉴（（癸象解析于（文件系统之读文件于缓存文件路径）））而
                        
                            有癸象对象于
                                （
                                （『代码生成全局名』与（癸象字符串于「代码生成全局名」））衔
                                （『代码生成函数名』与（癸象字符串于「代码生成函数名」））衔
                                【】
                                ）则（
                                    虑新代码生成信息者「代码生成全局名」与「代码生成函数名」而
                                    虑无者「更新编译单元」于路径于（「已从缓存加载」于「抽象语法信息」于「正则签名信息」于「当前文件依赖」于「求值正则形式」于（可有「新代码生成信息」））而
                                        新代码生成信息
                                ）
                            或有「其他」则（发生事故于『代码生成信息格式不正确』）
                    ）
            ）
        ）
    或有「正在编译」则发生事故于『循环引用』
    或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。 ：」