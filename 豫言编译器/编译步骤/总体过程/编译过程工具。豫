寻标准库之书。
观标准库之书。
寻观拓展库之顺序标识符之顺序标识符之书。
寻观标准库之操作系统之时间之书。

寻观豫言编译器之编译数据之文件管理之编译文件管理器之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法树序列化之书。
寻观豫言编译器之编译数据之抽象绑定树结构之抽象语法友好表示之书。

寻观豫言编译器之编译数据之编译配置之编译期输出之书。
寻观豫言编译器之编译数据之编译配置之全局配置之书。

寻观豫言编译器之编译数据之文件管理之编译文件信息之书。

寻观标准库之操作系统之路径之书。
寻观拓展库之癸象工具之总集之书。

观抽象语法之书。
观抽象语法表示之书。
「：记录文件*完成编译*的顺序，用于生成最后的可执行代码：」
文件编译顺序乃引用类于（字符串列）也。
文件编译顺序者新引用于【】也。

当前路径者文件系统之获取当前路径于元也。


「：输入文件的绝对路径，输出应当输出的文件路径prefix：」
获取输出文件路径乃化字符串「：绝对输入路径：」而字符串也。
获取输出文件路径者会输入而
    虑「
        去除结尾后者
            若（『。豫』是输入的结尾）则（去除串结尾于『。豫』于输入）
            否则（若（『.yuyan』是输入的结尾）则（去除串结尾于『.yuyan』于输入）
            否则（发生事故于『路径结尾不认识：』附输入））也。

        去除开头后者
            若（当前路径是「去除结尾后」的开头）
            则（去除串开头于当前路径于「去除结尾后」）
            否则「去除结尾后」也。

        （「路径合并」于（「路径合并」于当前路径于『.yybuild.nosync』）于去除开头后）
    」也。


进行单个文件底层编译乃化字符串而有也。
进行单个文件底层编译者会路径而
    虑「
        运行函数者若读引用于打印执行的外部指令则操作系统之子进程之成功运行并打印结果否则操作系统之子进程之成功运行也。
        运行函数于『llvm-as』于【『-o』，
                        （（获取输出文件路径于路径）附『.bc』），（（获取输出文件路径于路径）附『.ll』）】。
        若（读引用于不进行优化）则元否则（
            虑「
                运行函数于『opt』于【『-O3』，『-o』，
                                （（获取输出文件路径于路径）附『.opt.bc』），（（获取输出文件路径于路径）附『.bc』）】。
                运行函数于『llc』于【『-O3』，『-o』，
                                （（获取输出文件路径于路径）附『.opt.ll.o』），（（获取输出文件路径于路径）附『.opt.bc』）】。
                    元
            」
        ）。
        粗略调试打印行于（会无而『》》》》》》》》代码生成完成： 』附路径）。
        元
    」也。




获取输出代码文件路径乃化字符串而字符串也。
获取输出代码文件路径者会输入而
    （获取输出文件路径于输入）附『.ll』也。


读取文件签名乃化字符串而表达式也。
读取文件签名者会路径而（
    鉴「读取编译单元」于路径而
    有「已编译」于抽象语法信息于「正则签名」于「当前文件依赖」于「代码生成信息」则
            「正则签名」
    或有「已从缓存加载」于抽象语法信息于「正则签名信息」于「当前文件依赖」于「代码生成信息」则
        （鉴「正则签名信息」而
            有（可有「正则签名式」）则「正则签名式」
            或有（可无）则（
                虑缓存文件路径者（获取输出文件路径于路径）附『.正则签名.json』而
                虑无者（详细调试打印行于（会无而『正在从缓存加载文件签名：』附路径））而
                虑新正则签名者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                虑无者「更新编译单元」于路径于（「已从缓存加载」于抽象语法信息于（可有「新正则签名」）于「当前文件依赖」于「代码生成信息」）而
                虑无者（粗略调试打印行于（会无而『已从缓存加载文件签名：』附路径））而
                虑无者（详细调试打印行于（会无而『[D]已从缓存加载文件签名：』附路径附（表达式表示于「新正则签名」）））而
                新正则签名
            ）
        ）
    或有「正在编译」则发生事故于『循环引用』
    或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。


读取抽象语法乃化字符串而表达式也。
读取抽象语法者会路径而（
    鉴「读取编译单元」于路径而
    有「已编译」于抽象语法信息于「正则签名」于「当前文件依赖」于「代码生成信息」则
            「抽象语法信息」
    或有「已从缓存加载」于抽象语法信息于「正则签名信息」于「当前文件依赖」于「代码生成信息」则
        （鉴「抽象语法信息」而
            有（可有「抽象语法式」）则「抽象语法式」
            或有（可无）则（
                虑缓存文件路径者（获取输出文件路径于路径）附『.抽象语法.json』而
                虑无者（详细调试打印行于（会无而『正在从缓存加载抽象语法：』附路径））而
                虑新抽象语法者（「抽象语法反序列化」于（癸象解析于（文件系统之读文件于缓存文件路径）））而
                虑无者「更新编译单元」于路径于（「已从缓存加载」于（可有「新抽象语法」）于「正则签名信息」于「当前文件依赖」于「代码生成信息」）而
                虑无者（粗略调试打印行于（会无而『已从缓存加载抽象语法：』附路径））而
                虑无者（详细调试打印行于（会无而『[D]已从缓存加载抽象语法：』附路径附（表达式表示于「新抽象语法」）））而
                    新抽象语法
            ）
        ）
    或有「正在编译」则发生事故于『循环引用』
    或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。


读取代码生成信息乃化字符串而字符串合字符串也。
读取代码生成信息者会路径而（
    鉴「读取编译单元」于路径而
    有「已编译」于抽象语法信息于「正则签名」于「当前文件依赖」于「代码生成信息」则
        「代码生成信息」
    或有「已从缓存加载」于抽象语法信息于「正则签名信息」于「当前文件依赖」于「代码生成信息」则
        「代码生成信息」
    或有「正在编译」则发生事故于『循环引用』
    或有「尚未编译」则发生事故于『检查编译过程，应当是正在编译』
    ）也。