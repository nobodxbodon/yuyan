
览爻之书。
观爻之书。

览内建类型之书。
观内建类型之书。

览整数操作之书。

览错误之书。
览异常之书。

有者有也。


设索引异常为异常之新建异常授以（有）于『索引异常』。

列者承乙而复甲为夫一表有亦夫二表「夫一表乙合夫二表「甲」」也。
多态列者列也。

以空为列。
施空乃为受甲而卷一临元。

以多为承乙而化乙而化列启以乙而列启以乙。
施多乃为受乙而会「元素」而会列而卷二临「元素」与列。
注 list map。
以态射为承甲而承乙而化「化甲而「乙」」而化列启以甲而列启以乙。
施态射乃为受甲而受乙而循定以会
    射而会甲而「鉴舒甲而
        曰一则有癸而「空授以「乙」 」
        或曰二则有上甲而
            「
                「多授以「乙」」于「射于上甲中「一」」于「定于射于上甲中「二」」 
            」」。

注 list foldr。
以从右折叠为承甲而承乙而化「化甲而化乙而「乙」」而化乙而化列启以甲而乙。
施从右折叠乃为受甲而受乙而循定以会
    组合而会缺省而会甲而「鉴舒甲而
        曰一则有癸而缺省
        或曰二则有上甲而
            「
                （组合）于「上甲中「一」」于「定于（组合）于缺省于上甲中「二」」 
            」」 。
注 list foldr。
以从左折叠为承甲而承乙而化「化甲而化乙而「乙」」而化乙而化列启以甲而乙。
施从左折叠乃为受甲而受乙而循定以会
    组合而会缺省而会甲而「鉴舒甲而
        曰一则有癸而缺省
        或曰二则有上甲而
            「
                「定于（组合）于（（组合）于「上甲中「一」」于缺省）于上甲中「二」」 
            」」。
注：list filter。
以滤为承乙而化「化「乙」而爻」而化列启以乙而列启以乙。
施滤乃为受乙而循定以会
    过滤函数而会甲而鉴舒甲而
        曰一则有癸而甲
        或曰二则有上甲而
            「若「过滤函数于上甲中「一」」则「（多授以（乙））于上甲中「一」于「定于过滤函数于上甲中「二」」
                          」
                否则「定于过滤函数于上甲中「二」」
            」。

注append。
以附加为承乙而化列启以「乙」而化列启以「乙」而列启以乙。
施附加乃为受乙而循定以会
    列一而会列二而「鉴舒列一而
        曰一则有癸而「列二」
        或曰二则有上列一而
            「
                「多授以「乙」」于「上列一中「一」」于「定于上列一中「二」于列二」 
            」」。

注append。
以结尾多为承乙而化列启以「乙」而化乙而列启以乙。
施结尾多乃为受乙而会
    列一而会元素而
        （附加授以乙于列一于（多授以乙于（元素）于（空授以（乙））））。


注reverse。
以反转为承乙而化列启以「乙」而列启以乙。
施反转乃为受乙而循定以会
    列而「鉴舒列而
        曰一则有癸而「列」
        或曰二则有上列而
            「
                「附加授以「乙」」于「定于上列中「二」」于「（多授以（乙））于上列中「一」于（空授以（乙））」 
            」」。
注concat。
以串联为承乙而化列启以「列启以「乙」」而列启以乙。
施串联乃为受乙而循定以
        会甲而「鉴舒甲而
        曰一则有癸而「空授以「乙」 」
        或曰二则有上甲而
            「
                「附加授以「乙」」于「上甲中「一」」于「定于上甲中「二」」 
            」」。

注length。
以长度为承乙而化列启以「乙」而整数。
施长度乃为受乙而循定以
        会甲而「鉴舒甲而
        曰一则有癸而「零 」
        或曰二则有上甲而
            「
                整数操作之加于一于（「定于上甲中「二」」 ）
            」」。

注takeN。
以取为承乙而化整数而化列启以「乙」而列启以「乙」。
施取乃为受乙而循定以
        会数而会甲而
            鉴舒甲而
            曰一则有癸而「空授以「乙」）
            或曰二则有上甲而
                「若整数操作之等零于数
                    则「空授以「乙」）
                    否则
                        「
                            「多授以（乙）」于上甲中一于
                            （定于（整数操作之减于数于（一））于（「上甲中「二」」））
                」」。

注dropN。
以放为承乙而化整数而化列启以「乙」而列启以「乙」。
施放乃为受乙而循定以
        会数而会甲而
            鉴舒甲而
            曰一则有癸而「空授以「乙」）
            或曰二则有上甲而
                「若整数操作之等零于数则甲
                    否则
                        「
                            
                            （定于（整数操作之减于数于（一））于（「上甲中「二」」））
                」」。

注dropN at the end。
以结尾放为承乙而化整数而化列启以「乙」而列启以「乙」。
施结尾放乃为受乙而会数而会列而
        （反转授以（乙））于（（放授以（乙））于数于（（反转授以（乙））于列））
        。
注beginswith。
以以起否为承乙而化（化乙而化乙而（爻））而化列启以乙而化列启以乙而爻。
施以起否乃为受乙而循定以
        会等于测试而会前缀而会测试列而
             鉴舒前缀而
            曰一则有癸而阳
            或曰二则有上前缀而
                「鉴舒测试列而
                    曰一则有癸而阴
                    或曰二则有上测试列而
                        且于（（等于测试） 于 （上前缀中（一）） 于（上测试列中（一）））
                        于（定于（等于测试） 于 （上前缀中（二）） 于 （上前缀中（二）））
                」。


注endswith。
以以终否为承乙而化（化乙而化乙而（爻））而化列启以乙而化列启以乙而爻。
施以终否乃为受乙而循定以
        会等于测试而会后缀而会测试列而
            （（以起否）授以（乙））于（等于测试）于（（反转授以（乙））于后缀）于（（反转授以（乙））于测试列）。


注exists。
以存在吗为承乙而化（化乙而（爻））而化列启以乙而爻。
施存在吗乃为受乙而会函而会列而非于（整数操作之等于（零）于（（长度授以（乙））于（（滤授以（乙））于函于列）））。    
        
注tabulate。
以打表为承乙而化整数而化（化整数而（乙））而列启以乙。
施打表乃为受乙而循定以会数而会函而
    若整数操作之等零于数
        则 （空授以（乙））
    否则 （附加授以（乙））于（定于（整数操作之减于数于（一））于函）于（（多授以（乙））于（函于（整数操作之减于数于（一）））于（空授以（乙）））。

以第N个为承乙而化整数而化列启以乙而乙。
施第N个乃为受乙而循定以会数而会列而
    鉴舒列而
        曰一则有癸而
        （索引异常中抛出授以乙于元
            注（错误之错误 授以（乙））于『错误：第N个的N超出了范围』）
        或曰二则有上甲而（
            若整数操作之等零于数则上甲中一
                否则定于（整数操作之减于数于（一））于（上甲中（二））
        ）。