字符串者《《字符串》》也。
整数者《《整数》》也。
小数者《《小数》》也。

以打印行为化字符串而有。
施打印行乃为会串而《《C调用》》名『yyPrintln』传串。

以调试打印为承乙而化乙而有。
施调试打印乃为受乙而会物而《《C调用》》名『yyPrintGeneric』传物。

注 booleans。
爻者夫阴表有亦夫阳表有也。
以阳为爻。
以阴为爻。
施阳乃为「阳」临元。
施阴乃为阴临元。
注 not。
以非为化爻而爻。
施非乃为会甲而鉴甲而
    曰阳则有葵而阴
    或
    曰阴则有葵而阳。

注 and。
以且为化爻而化爻而爻。
施且乃为会甲而会乙而鉴甲而
    曰阳则有癸而（鉴乙而曰阳则有癸而阳 或 曰阴则有癸而（阴））
    或
    曰阴则有癸而阴。
注 or。
以或者为化爻而化爻而爻。
施或者乃为会甲而会乙而鉴甲而
    曰阳则有癸而阳
    或
    曰阴则有癸而（鉴乙而曰阳则有癸而阳 或 曰阴则有癸而（阴））。
有书整数操作曰「
    以等为化整数而化整数而爻。
    施等乃为会甲而会乙而《《C调用》》名『yyIntEqTest』传甲与乙。

    以加为化整数而化整数而整数。
    施加乃为会甲而会乙而《《C调用》》名『yyIntAdd』传甲与乙。

    以减为化整数而化整数而整数。
    施减乃为会甲而会乙而《《C调用》》名『yyIntSub』传甲与乙。

    以等零为化整数而爻。
    施等零乃为会甲而（虑（
        设乙为零。注：要改变这个，零应该也是immediate value？？？。
    ）以成《《C调用》》名『yyIntEqTest』传甲与乙之道）。

    以表示为化整数而字符串。
    施表示乃为会甲而《《C调用》》名『yyIntToString』传甲。
」。


 注 list。


多态列者承乙而复甲为夫一表有亦夫二表「夫一表乙合夫二表「甲」」也。

以多态空为多态列。
施多态空乃为受甲而卷一临元。

以多态多为承乙而化乙而化多态列启以乙而多态列启以乙。
施多态多乃为受乙而会「元素」而会列而卷二临「元素」与列。
注 list map。
以态射为承甲而承乙而化「化甲而「乙」」而化多态列启以甲而多态列启以乙。
施态射乃为受甲而受乙而循定以会
    射而会甲而「鉴舒甲而
        曰一则有癸而「多态空授以「乙」 」
        或曰二则有上甲而
            「
                「多态多授以「乙」」于「射于上甲中「一」」于「定于射于上甲中「二」」 
            」」。

注 list foldr。
以多态从右折叠为承甲而承乙而化「化甲而化乙而「乙」」而化乙而化多态列启以甲而乙。
施多态从右折叠乃为受甲而受乙而循定以会
    组合而会缺省而会甲而「鉴舒甲而
        曰一则有癸而缺省
        或曰二则有上甲而
            「
                （组合）于「上甲中「一」」于「定于（组合）于缺省于上甲中「二」」 
            」」 。
注 list foldr。
以多态从左折叠为承甲而承乙而化「化甲而化乙而「乙」」而化乙而化多态列启以甲而乙。
施多态从左折叠乃为受甲而受乙而循定以会
    组合而会缺省而会甲而「鉴舒甲而
        曰一则有癸而缺省
        或曰二则有上甲而
            「
                「定于（组合）于（（组合）于「上甲中「一」」于缺省）于上甲中「二」」 
            」」。
注：list filter。
以多态滤为承乙而化「化「乙」而爻」而化多态列启以乙而多态列启以乙。
施多态滤乃为受乙而循定以会
    过滤函数而会甲而鉴舒甲而
        曰一则有癸而甲
        或曰二则有上甲而
            「鉴「过滤函数于上甲中「一」」而
                曰阳则有癸而「（多态多授以（乙））于上甲中「一」于「定于过滤函数于上甲中「二」」
                          」
                或曰阴则有癸而「定于过滤函数于上甲中「二」」
            」。

注append。
以多态附加为承乙而化多态列启以「乙」而化多态列启以「乙」而多态列启以乙。
施多态附加乃为受乙而循定以会
    列一而会列二而「鉴舒列一而
        曰一则有癸而「列二」
        或曰二则有上列一而
            「
                「多态多授以「乙」」于「上列一中「一」」于「定于上列一中「二」于列二」 
            」」。

注reverse。
以多态反转为承乙而化多态列启以「乙」而多态列启以乙。
施多态反转乃为受乙而循定以会
    列而「鉴舒列而
        曰一则有癸而「列」
        或曰二则有上列而
            「
                「多态附加授以「乙」」于「定于上列中「二」」于「（多态多授以（乙））于上列中「一」于（多态空授以（乙））」 
            」」。
注concat。
以多态串联为承乙而化多态列启以「多态列启以「乙」」而多态列启以乙。
施多态串联乃为受乙而循定以
        会甲而「鉴舒甲而
        曰一则有癸而「多态空授以「乙」 」
        或曰二则有上甲而
            「
                「多态附加授以「乙」」于「上甲中「一」」于「定于上甲中「二」」 
            」」。

注length。
以多态长度为承乙而化多态列启以「乙」而整数。
施多态长度乃为受乙而循定以
        会甲而「鉴舒甲而
        曰一则有癸而「零 」
        或曰二则有上甲而
            「
                整数操作之加于一于（「定于上甲中「二」」 ）
            」」。

注takeN。
以多态取为承乙而化整数而化多态列启以「乙」而多态列启以「乙」。
施多态取乃为受乙而循定以
        会数而会甲而
            鉴舒甲而
            曰一则有癸而「多态空授以「乙」）
            或曰二则有上甲而
                「鉴整数操作之等零于数而
                    曰阳则有癸而「多态空授以「乙」）
                    或曰阴则有癸而
                        「
                            「多态多授以（乙）」于上甲中一于
                            （定于（整数操作之减于数于（一））于（「上甲中「二」」））
                」」。

注dropN。
以多态放为承乙而化整数而化多态列启以「乙」而多态列启以「乙」。
施多态放乃为受乙而循定以
        会数而会甲而
            鉴舒甲而
            曰一则有癸而「多态空授以「乙」）
            或曰二则有上甲而
                「鉴整数操作之等零于数而
                    曰阳则有癸而甲
                    或曰阴则有癸而
                        「
                            
                            （定于（整数操作之减于数于（一））于（「上甲中「二」」））
                」」。

注dropN at the end。
以多态结尾放为承乙而化整数而化多态列启以「乙」而多态列启以「乙」。
施多态结尾放乃为受乙而会数而会列而
        （多态反转授以（乙））于（（多态放授以（乙））于数于（（多态反转授以（乙））于列））
        。
注beginswith。
以多态以起否为承乙而化（化乙而化乙而（爻））而化多态列启以乙而化多态列启以乙而爻。
施多态以起否乃为受乙而循定以
        会等于测试而会前缀而会测试列而
             鉴舒前缀而
            曰一则有癸而阳
            或曰二则有上前缀而
                「鉴舒测试列而
                    曰一则有癸而阴
                    或曰二则有上测试列而
                        且于（（等于测试） 于 （上前缀中（一）） 于（上测试列中（一）））
                        于（定于（等于测试） 于 （上前缀中（二）） 于 （上前缀中（二）））
                」。


注endswith。
以多态以终否为承乙而化（化乙而化乙而（爻））而化多态列启以乙而化多态列启以乙而爻。
施多态以终否乃为受乙而循定以
        会等于测试而会后缀而会测试列而
            （（多态以起否）授以（乙））于（等于测试）于（（多态反转授以（乙））于后缀）于（（多态反转授以（乙））于测试列）。


注exists。
以多态存在吗为承乙而化（化乙而（爻））而化多态列启以乙而爻。
施多态存在吗乃为受乙而会函而会列而非于（整数操作之等于（零）于（（多态长度授以（乙））于（（多态滤授以（乙））于函于列）））。    
        

注 string list。
字符串列者多态列启以字符串也。

以串空为字符串列。
以串多为化《《字符串》》而化「字符串列」而「字符串列」。

施串空乃为多态空授以字符串。
施串多乃为多态多授以字符串。


以串转通字符为化「字符串」而「字符串列」。
施串转通字符乃为会串而《《C调用》》名『yyGetCodePoints』传串。

以通字符转串为化「字符串列」而「字符串」。
施通字符转串乃为会列而《《C调用》》名『yyCodePointsConcat』传列。

以字符串相等吗为化字符串而化字符串而爻。
施字符串相等吗乃为会串甲而会串乙而《《C调用》》名『yyStringEq』传串甲与串乙。

以是子字符串吗为化字符串而化字符串而爻。
施是子字符串吗乃为会串甲而会串乙而《《C调用》》名『yyIsSubstring』传串甲与串乙。

以串组合为化字符串而化字符串而化字符串而化字符串而字符串。
施串组合乃为会甲而会乙而会丙而会丁而通字符转串于（串多于甲于（串多于乙于（串多于丙于（串多于丁于（串空）））））。

注：串结尾是它吗 1 2 测试1是否为2的结尾。
以串结尾是它吗为化字符串而化字符串而爻。
施串结尾是它吗乃为会串一而会串二而
    （（多态以终否）授以（字符串））
        于（字符串相等吗）
        于（串转通字符于（串一））
        于（串转通字符于（串二））。


以去除串结尾为化字符串而化字符串而字符串。
施去除串结尾乃为会串一而会串二而
    通字符转串于
        （（（多态结尾放）授以（字符串））
        于（（多态长度授以（字符串））于（串转通字符于（串一）））
        于（串转通字符于（串二）））。


有书文件系统曰「

    以读为化《《字符串》》而《《字符串》》。
    施读乃为会串而《《C调用》》名『yyReadFileSync』传串。

    以读文件夹为化《《字符串》》而「字符串列」。
    施读文件夹乃为会串而《《C调用》》名『yyListDirectorySync』传串。

    以其文件夹乎为化《《字符串》》而爻。
    施其文件夹乎乃为会串而《《C调用》》名『yyIsPathDirectory』传串。

」。


有书子进程曰「

    以获取输出为化《《字符串》》而化「字符串列」而夫退出状态表爻合夫标准输出表《《字符串》》合夫错误输出表《《字符串》》。
    施获取输出乃为会程序名而会参数列而《《C调用》》名『yyRunProcessGetOutputSync』传「程序名」与「参数列」。

    以运行为化《《字符串》》而化「字符串列」而夫一表《《字符串》》合夫二表《《字符串》》。
    施运行乃为会程序名而会参数列而《《C调用》》名『yyRunProcessSync』传「程序名」与「参数列」。

」。
注文件系统之读于『lsp.py』。
注子进程之获取输出于『./yy』于「多于『r』于「多于『examples/example.yuyan』于空」」。
注：子进程之运行于『date』于空。
注：子进程之获取输出于『date』于空。
注：子进程之获取输出于『./debug_args』于「多于『r』于「多于『examples/example.yuyan』于空」」。
设测试目录名为『tests』。
设测试目录名们为串多于测试目录名于串空。
设所有文件夹为文件系统之读文件夹于测试目录名。

设串串空为多态空授以「字符串列」。
设串串多为多态多授以「字符串列」。



以路径组合为化字符串而化字符串而字符串。
施路径组合乃为会甲而会乙而
    通字符转串于「「多态串联授以「字符串」」于「串串多于「串转通字符于（甲）」
                于「串串多于「串转通字符于『/』」于
                「串串多于「串转通字符于「乙」」于串串空」」」」
            。

以获取文件一次为化字符串而字符串列 。
施获取文件一次乃为会路径而（虑（
                设名们为文件系统之读文件夹于路径。
                设结果为
                    「态射授以字符串授以（字符串）」于「会文件夹名而
                            （（路径组合）于路径于（文件夹名））
                        」于名们。
               
            ）
         以成
            结果    
         之道）。

设成功调用结尾为『.success』。
设失败调用结尾为『.failure』。
设豫言结尾为『.yuyan』。
以反复获取文件为化字符串列而字符串列。
施反复获取文件乃为循定以会路径们而
    鉴舒路径们而
    曰一则有癸而路径们
    或曰二则有癸而（虑（
                设新路径名们为（多态串联授以（字符串））于（（态射授以字符串授以（字符串列））于获取文件一次于路径们）。
                以是否是文件夹为化字符串而爻。
                施是否是文件夹乃为会甲而非于（（或者）于（（或者）于（串结尾是它吗于成功调用结尾于（甲））
                                                     于（串结尾是它吗于失败调用结尾于（甲）））
                                                于（串结尾是它吗于豫言结尾于（甲））） 。
                以是否是文件夹2为化字符串而爻。
                施是否是文件夹2乃为
                    会甲而
                    （虑（
                        设结果为（多态存在吗授以（字符串））于
                    （会串而字符串相等吗于串于『.』） 于（串转通字符于（甲））。
                    注（（调试打印授以（字符串））于甲 。
                        （调试打印授以（爻））于（非于（结果））。）。
                    ）以成非于结果之道）。
                设新文件夹们为（多态滤授以（字符串））于（是否是文件夹2）于新路径名们。
                设新文件们为（多态滤授以（字符串））于（会甲而非于（是否是文件夹2于（甲）））于新路径名们。

                注（打印行于『新文件夹们：』 。
                （调试打印授以（字符串列）） 于新文件夹们。
                打印行于『 』。
                打印行于『新文件们：』。
                （调试打印授以（字符串列）） 于新文件们。
                打印行于『 』 。）。

                设新文件夹们长度为（（多态长度授以（字符串））于新文件夹们）。

                注（打印行于『新文件们长度：』。
                （调试打印授以（整数）） 于新文件夹们长度。
                打印行于『 』。）。

                设等零吗为（整数操作之（等零））于新文件夹们长度。

                注（打印行于『等零吗：』。
                （调试打印授以（爻）） 于等零吗。
                打印行于『 』。）。


                设新文件夹结果为
                    鉴等零吗而
                        曰阳则有癸而新文件夹们
                        或曰阴则有癸而定于新文件夹们。
                设结果为（多态附加授以（字符串））于新文件夹结果于新文件们。
            ）
         以成
            结果    
         之道）。

设所有文件为反复获取文件于测试目录名们。


设失败文件们为（多态滤授以（字符串））于（串结尾是它吗于（失败调用结尾））于（所有文件）。
注（调试打印授以（字符串列）） 于（失败文件们） 。
设成功文件们为（多态滤授以（字符串））于（串结尾是它吗于（成功调用结尾））于（所有文件）。
注（调试打印授以（字符串列）） 于（成功文件们） 。
设豫言文件们为（多态滤授以（字符串））于（串结尾是它吗于（豫言结尾））于（所有文件）。
注（调试打印授以（字符串列）） 于（豫言文件们） 。
以找文件为化字符串而字符串列。
施找文件乃为会串而
    （
        虑（
            设去掉拓展名的文件名为去除串结尾于成功调用结尾于串。
            
            以发现文件名为化整数而字符串列。
            施发现文件名乃为循定以会数而
                （虑（
                    设测试文件名为（串组合）于去掉拓展名的文件名于『-』于（整数操作之表示于（数））于豫言结尾。
                   
                    设结果为鉴（（多态存在吗授以（字符串））于（会串而字符串相等吗于（串）于测试文件名）于豫言文件们）
                        而
                            曰阴则有癸而串空
                            或曰阳则有癸而串多于测试文件名于（定于（整数操作之加于（一）于数））。
                ）以成 结果
                之道）。
        ）
        以成 发现文件名于（一）
        之道
    ）。

处理结果者夫成功数表整数合夫失败数表整数也。

以合并结果为化处理结果而化处理结果而处理结果。
施合并结果乃为会甲而会乙而整数操作之加于甲中成功数于乙中成功数与整数操作之加于甲中失败数于乙中失败数。

注： 第一爻 阴表处理成功文件，阳表处理失败文件。
以处理文件为化爻而化字符串而处理结果。
施处理文件乃为会正在处理失败文件而会文件名而
    （
        虑（
            设豫言文件们为找文件于文件名。
            设文件内容为文件系统之读于文件名。
            设结果为（多态从左折叠授以（字符串）授以处理结果）于
                （会豫言文件名而会上一步结果而
                    （
                        虑（
                            设参数为串多于（『r』）于（串多于豫言文件名于（串空））。
                            
                            设命令为（通字符转串于（串多于『./yy r 』于（串多于豫言文件名于（串空））））。
                            打印行于命令。
                            设输出为子进程之获取输出于『./yy』于参数。
                            设输出成功了吗为鉴正在处理失败文件而
                                        曰阳则有癸而
                                            （且于（是子字符串吗于文件内容于（输出中（错误输出）））
                                            于（非于（是子字符串吗于『unhandled exception』于（输出中（错误输出）））））
                                        或曰阴则有癸而
                                            
                                            （且于（是子字符串吗于文件内容于（输出中（标准输出）））
                                            于（非于（是子字符串吗于『fail』于（输出中（错误输出）））））。
                            设编译状态成功了吗为鉴正在处理失败文件而
                                        曰阳则有癸而
                                            （非于（输出中（退出状态）））
                                        或曰阴则有癸而
                                            （输出中（退出状态））。
                            设成功了吗为且于编译状态成功了吗于输出成功了吗。
                            设下一步结果为鉴成功了吗而
                                曰阳则有癸而（合并结果）于上一步结果于（（一）与零）
                                或曰阴则有癸而（合并结果）于上一步结果于（零与（一））。

                            
                            打印行于（鉴成功了吗而
                                曰阳则有癸而『成功』
                                或曰阴则有癸而『失败』）。

                            （鉴成功了吗而
                                曰阳则有癸而元
                                或曰阴则有癸而（
                                    虑（
                                        设串一为（鉴编译状态成功了吗而
                                            曰阳则有癸而『（编译状态对比：成功。』
                                            或曰阴则有癸而『（编译状态对比：失败。』）。
                                        设串二为（鉴输出成功了吗而
                                            曰阳则有癸而『输出对比：成功。）』
                                            或曰阴则有癸而『输出对比：失败。）』）。
                                        打印行于（通字符转串于（串多于串一于（串多于串二于（串空））））。 
                                    ）以成 元 之道
                                ））。
                        ）
                        以成 
                            下一步结果
                        之道
                    ）
                ）于（零与（零））于豫言文件们
        ）
        以成 结果
        之道
    ）。

设失败的处理结果为（态射授以字符串授以（处理结果）） 于（处理文件于（阳））于失败文件们。
设成功的处理结果为（态射授以字符串授以（处理结果）） 于（处理文件于（阴））于成功文件们。


设所有结果为（多态附加授以（处理结果））于成功的处理结果于失败的处理结果。

设所有结果为（多态从左折叠授以（处理结果）授以处理结果）于（合并结果）于（零与（零））于（所有结果）。

设结语为通字符转串于（串多于『共计成功数：』于（串多于（整数操作之表示于（所有结果）中成功数）
    于（串多于『
共计失败数：』于（串多于（整数操作之表示于（所有结果）中失败数）于串空））））。

打印行于结语。